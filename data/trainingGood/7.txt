b'\n\n\n\n \n \n \n Python/C API Reference Manual — Python 2.7.13 documentation\n \n \n \n \n \n var DOCUMENTATION_OPTIONS = { \n URL_ROOT : \'../\ ' , \n VERSION : \'2.7.13\ ' , \n COLLAPSE_INDEX : false , \n FILE_SUFFIX : \'.html\ ' , \n HAS_SOURCE : true\n } ; \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n \n \n Navigation\n \n \n index\n \n modules |\n \n next |\n \n previous |\n \n Python »\n \n 2.7.13\n Documentation »\n \n \n \n \n\n \n \n \n \n \n \nPython/C API Reference Manual\xc2\xb6\nThis manual documents the API used by C and C++ programmers who want to write\nextension modules or embed Python . It is a companion to Extending and Embedding the Python Interpreter , \nwhich describes the general principles of extension writing but does not\ndocument the API functions in detail.\n\n\nIntroduction\nInclude Files\nObjects , Types and Reference Counts\nExceptions\nEmbedding Python\nDebugging Builds\n\n\nThe Very High Level Layer\nReference Counting\nException Handling\nUnicode Exception Objects\nRecursion Control\nStandard Exceptions\nString Exceptions\n\n\nUtilities\nOperating System Utilities\nSystem Functions\nProcess Control\nImporting Modules\nData marshalling support\nParsing arguments and building values\nString conversion and formatting\nReflection\nCodec registry and support functions\n\n\nAbstract Objects Layer\nObject Protocol\nNumber Protocol\nSequence Protocol\nMapping Protocol\nIterator Protocol\nOld Buffer Protocol\n\n\nConcrete Objects Layer\nFundamental Objects\nNumeric Objects\nSequence Objects\nMapping Objects\nOther Objects\n\n\nInitialization , Finalization , and Threads\nInitializing and finalizing the interpreter\nProcess-wide parameters\nThread State and the Global Interpreter Lock\nSub-interpreter support\nAsynchronous Notifications\nProfiling and Tracing\nAdvanced Debugger Support\n\n\nMemory Management\nOverview\nMemory Interface\nExamples\n\n\nObject Implementation Support\nAllocating Objects on the Heap\nCommon Object Structures\nType Objects\nNumber Object Structures\nMapping Object Structures\nSequence Object Structures\nBuffer Object Structures\nSupporting Cyclic Garbage Collection\n\n\n\n\n\n\n\n \n \n \n \n \n Previous topic\n 5 . Embedding Python in Another Application\n Next topic\n Introduction\nThis Page\n\n Report a Bug\n Show Source\n\n\n\n Quick search\n \n \n \n \n \n \n \n Enter search terms or a module , class or function name.\n \n\n $ ( \ ' # searchbox\ ' ) .show ( 0 ) ; \n \n \n \n \n \n Navigation\n \n \n index\n \n modules |\n \n next |\n \n previous |\n \n Python »\n \n 2.7.13\n Documentation »\n \n \n \n \n \n © Copyright 1990-2016 , Python Software Foundation.\n \n The Python Software Foundation is a non-profit corporation.\n Please donate.\n \n Last updated on Dec 08 , 2016.\n Found a bug ? \n \n Created using Sphinx 1.3.3.\n \n\n \n ' 