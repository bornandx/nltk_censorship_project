b'\r\n\r\n\r\n\r\n\r\nc # - What is the difference between the | and || or operators ? - Stack Overflow\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n StackExchange.ready ( function ( ) { \r\n \r\n StackExchange.using ( `` snippets '' , function ( ) { \r\n StackExchange.snippets.initSnippetRenderer ( ) ; \r\n } ) ; \r\n \r\n\r\n StackExchange.using ( `` postValidation '' , function ( ) { \r\n StackExchange.postValidation.initOnBlurAndSubmit ( $ ( \ ' # post-form\ ' ) , 2 , \'answer\ ' ) ; \r\n } ) ; \r\n\r\n \r\n StackExchange.question.init ( { showAnswerHelp : true , totalCommentCount:0 , shownCommentCount:0 , highlightColor : \ ' # F4A83D\ ' , backgroundColor : \ ' # FFF\ ' , questionId:35301 } ) ; \r\n\r\n styleCode ( ) ; \r\n\r\n StackExchange.realtime.subscribeToQuestion ( \'1\ ' , \'35301\ ' ) ; \r\n StackExchange.using ( `` gps '' , function ( ) { StackExchange.gps.trackOutboundClicks ( \ ' # content\ ' , \'.post-text\ ' , true ) ; } ) ; \r\n\r\n } ) ; \r\n \r\n\r\n\r\n \r\n StackExchange.init ( { `` locale '' : '' en '' , '' stackAuthUrl '' : '' https : //stackauth.com '' , '' networkMetaHostname '' : '' meta.stackexchange.com '' , '' serverTime '' :1481386991 , '' routeName '' : '' Questions/Show '' , '' site '' : { `` name '' : '' Stack Overflow '' , '' description '' : '' Q & A for professional and enthusiast programmers '' , '' isNoticesTabEnabled '' : true , '' recaptchaPublicKey '' : '' 6LdchgIAAAAAAJwGpIzRQSOFaO0pU6s44Xt8aTwc '' , '' recaptchaAudioLang '' : '' en '' , '' enableNewTagCreationWarning '' : true , '' insertSpaceAfterNameTabCompletion '' : false , '' id '' :1 , '' enableInsertDocLinkDialog '' : true , '' enableSocialMediaInSharePopup '' : true } , '' user '' : { `` fkey '' : '' 7b1b7f4e1a6b23324556540c1e6d03a0 '' , '' rep '' :0 , '' isAnonymous '' : true , '' isAnonymousNetworkWide '' : true } , '' events '' : { `` postType '' : { `` question '' :1 } , '' postEditionSection '' : { `` title '' :1 , '' body '' :2 , '' tags '' :3 } } , '' story '' : { `` minCompleteBodyLength '' :75 } } , { `` site '' : { `` allowImageUploads '' : true , '' enableUserHovercards '' : true , '' styleCode '' : true , '' enableNewLinkInsertDialog '' : true , '' enableNewHeaderDesign '' : true , '' enableImgurHttps '' : true } , '' comments '' : { } , '' tags '' : { } , '' accounts '' : { `` currentPasswordRequiredForChangingStackIdPassword '' : true } , '' flags '' : { `` allowRetractingFlags '' : true } , '' analytics '' : { `` clientTimingsAbsoluteTimeout '' :30000 , '' clientTimingsDebounceTimeout '' :1000 } , '' snippets '' : { `` snippetsEnabled '' : true , '' renderDomain '' : '' stacksnippets.net '' } , '' markdown '' : { `` asteriskIntraWordEmphasis '' : true } } ) ; \r\n StackExchange.using.setCacheBreakers ( { `` js/prettify-full.en.js '' : '' 06d67193cff4 '' , '' js/moderator.en.js '' : '' 1bdc231dc7f5 '' , '' js/full-anon.en.js '' : '' 49075288bf9b '' , '' js/full.en.js '' : '' 53dd47f49d45 '' , '' js/wmd.en.js '' : '' 1966ce920971 '' , '' js/third-party/jquery.autocomplete.min.js '' : '' e5f01e97f7c3 '' , '' js/third-party/jquery.autocomplete.min.en.js '' : '' '' , '' js/mobile.en.js '' : '' 3c7426a1302d '' , '' js/help.en.js '' : '' 12aebc9f0272 '' , '' js/tageditor.en.js '' : '' 820420283947 '' , '' js/tageditornew.en.js '' : '' 8b70577d4cf5 '' , '' js/inline-tag-editing.en.js '' : '' 2ddfa79492e7 '' , '' js/revisions.en.js '' : '' f4d14ad9db6c '' , '' js/review.en.js '' : '' 45ded0b70a10 '' , '' js/tagsuggestions.en.js '' : '' d1ff9b84abe5 '' , '' js/post-validation.en.js '' : '' 38ab6ae8a4a3 '' , '' js/explore-qlist.en.js '' : '' e71f14781288 '' , '' js/events.en.js '' : '' e449ebf70756 '' , '' js/keyboard-shortcuts.en.js '' : '' 4d22dd1bfd37 '' , '' js/external-editor.en.js '' : '' 5441bf1fb1b5 '' , '' js/external-editor.en.js '' : '' 5441bf1fb1b5 '' , '' js/snippet-javascript.en.js '' : '' 07c320a2d73c '' , '' js/snippet-javascript-codemirror.en.js '' : '' aa028aaeae06 '' } ) ; \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.init ( true ) ; \r\n } ) ; \r\n \r\n \r\n \r\n StackExchange.ready ( function ( ) { \r\n $ ( \ ' # nav-tour\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` aboutpage.click '' , { aboutclick_location : `` headermain '' } , true ) ; \r\n } ) ; \r\n } ) ; \r\n } ) ; \r\n \r\n\r\n\r\n \r\n ( function ( ) { var old = $ .fn.contents ; $ .fn.contents = function ( ) { try { return old.apply ( this , arguments ) ; } catch ( e ) { return $ ( [ ] ) ; } } } ) ( ) \r\n \r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n \r\n \r\n current community\r\n \r\n \r\n \r\n \r\n \r\n \r\n chat\r\n \r\n\r\n\r\n\r\n\r\n \r\n \r\n Stack Overflow\r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n \r\n Meta Stack Overflow\r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\nyour communities \r\n\r\n \r\n \r\n\r\n \r\nSign up or log in to customize your list.\r\n \r\n \r\n\r\n \r\n more stack exchange communities\r\n \r\n company blog\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n Stack Exchange\r\n \r\n\r\n \r\n Inbox\r\n \r\n \r\n \r\n Reputation and Badges\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n \r\n \r\n sign up\r\n log in\r\n\r\n tour\r\n \r\n help\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Tour\r\n \r\n Start here for a quick overview of the site\r\n \r\n \r\n \r\n \r\n \r\n Help Center\r\n \r\n Detailed answers to any questions you might have\r\n \r\n \r\n \r\n \r\n \r\n Meta\r\n \r\n Discuss the workings and policies of this site\r\n \r\n \r\n \r\n \r\n \r\n About Us\r\n \r\n Learn more about Stack Overflow the company\r\n \r\n \r\n \r\n \r\n \r\n Business\r\n \r\n Learn more about hiring developers or posting ads with us\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n StackExchange.ready ( function ( ) { StackExchange.topbar.init ( ) ; } ) ; \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n Stack Overflow\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Questions\r\n \r\n \r\n\r\n \r\n \r\n Jobs\r\n \r\n \r\n \r\n \r\n Documentation\r\n \r\n \r\n \r\n \r\n Tags\r\n \r\n \r\n\r\n \r\n \r\n Users\r\n \r\n \r\n\r\n \r\n \r\n Badges\r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n Ask Question\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n x Dismiss\r\n \r\n \r\n Join the Stack Overflow Community\r\n \r\n \r\n Stack Overflow is a community of 6.4 million programmers , just like you , helping each other.\r\n \r\nJoin them ; it only takes a minute : \r\n \r\n Sign up\r\n \r\n \r\n\r\n StackExchange.ready ( function ( ) { \r\n\r\n var location = 0 ; \r\n if ( $ ( `` body '' ) .hasClass ( `` questions-page '' ) ) { \r\n location = 1 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` question-page '' ) ) { \r\n location = 1 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` faq-page '' ) ) { \r\n location = 5 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` home-page '' ) ) { \r\n location = 3 ; ; \r\n } \r\n\r\n $ ( \ ' # tell-me-more\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` hero.action '' , { hero_action_type : \'cta\ ' , location : location } , true ) ; \r\n } ) ; \r\n } ) ; \r\n $ ( \ ' # herobox # close\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` hero.action '' , { hero_action_type : `` minimize '' , location : location } , true ) ; \r\n } ) ; \r\n $ .cookie ( `` hero '' , `` mini '' , { path : `` / '' , expires : 365 } ) ; \r\n $ .ajax ( { \r\n url : `` /hero-mini '' , \r\n success : function ( data ) { \r\n $ ( `` # herobox '' ) .fadeOut ( `` fast '' , function ( ) { \r\n $ ( `` # herobox '' ) .replaceWith ( data ) ; \r\n $ ( `` # herobox-mini '' ) .fadeIn ( `` fast '' ) ; \r\n } ) ; \r\n } \r\n } ) ; \r\n return false ; \r\n } ) ; \r\n } ) ; \r\n\r\n\t\t\t\r\n What is the difference between the | and || or operators ? \r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n \r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk95975263 '' ,4 ) .setZone ( 43 ) ; } ) ; \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 177\r\n down vote\r\n\r\n favorite\r\n 35\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n \r\n\r\nI have always used || ( two pipes ) in OR expressions , both in C # and PHP . Occasionally I see a single pipe used : | . What is the difference between those two usages ? Are there any caveats when using one over the other or are they interchangeable ? \n \r\n \r\n c # php operators \r\n \r\n \r\n \r\n \r\nshare|improve this question \r\n \r\n \r\n\r\n \r\n edited Jul 23 \'13 at 8:05\r\n \r\n \r\n \r\n \r\n \r\n Rory O'Kane\r\n \r\n 12k54981\r\n \r\n \r\n \r\n \r\n \r\n \r\n asked Aug 29 \'08 at 21:11\r\n \r\n \r\n \r\n \r\n \r\n GloryFish\r\n \r\n 4,803144242\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n\t\t\t\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t12 Answers\r\n 12\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n \r\n active\r\n \r\n oldest\r\n \r\n votes\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t \r\n\t\t\t\t \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 311\r\n down vote\r\n\r\n\r\n\r\n accepted\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nJust like the & and & & operator , the double Operator is a `` short-circuit '' operator.\n\nFor example : \n\nif ( condition1 || condition2 || condition3 ) \n\n\nIf condition1 is true , condition 2 and 3 will NOT be checked.\n\nif ( condition1 | condition2 | condition3 ) \n\n\nThis will check conditions 2 and 3 , even if 1 is already true . As your conditions can be quite expensive functions , you can get a good performance boost by using them.\n\nThere is one big caveat , NullReferences or similar problems . For example : \n\nif ( class ! = null & & class.someVar < 20 ) \n\n\nIf class is null , the if-statement will stop after `` class ! = null '' is false . If you only use & , it will try to check class.someVar and you get a nice NullReferenceException . With the Or-Operator that may not be that much of a trap as it\ 's unlikely that you trigger something bad , but it\ 's something to keep in mind.\n\nNo one ever uses the single & or | operators though , unless you have a design where each condition is a function that HAS the be executed . Sounds like a design smell , but sometimes ( rarely ) it\ 's a clean way to do stuff . The & operator does `` run these 3 functions , and if one of them returns false , execute the else block '' , while the | does `` only run the else block if none return false '' - can be useful , but as said , often it\ 's a design smell.\n\nThere is a Second use of the | and & operator though : Bitwise Operations.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n \r\n edited Jan 16 \'10 at 22:47\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:17\r\n \r\n \r\n \r\n \r\n \r\n Michael Stum♦\r\n \r\n 97.6k86331480\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n 36\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n not sure why this is getting downvoted -- it is correct ! Double check it in your compiler if you do n't believe him ! \r\n – Jeff Atwood♦\r\n Sep 6 \'08 at 8:07\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 8\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Yeah , I did n't believe it until I created a console app - but good lord ! Why would they give you the rope to hang yourself ! I hated that about VB.NET - the OrElse and AndAlso keywords ! \r\n – Jarrod Dixon♦\r\n Sep 6 \'08 at 8:09\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 17\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Teaching people to use & and | as conditional operators is a hack , and will get them in trouble if they ever need use C/C++ : 1 & & 2 is true while 1 & 2 is false.\r\n – BlueRaja - Danny Pflughoeft\r\n Jan 17 \'10 at 2:14\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 33\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n It 's not a hack , it 's officially specified for C # in Section 7.10.3 Boolean logical operators : `` The result of x | y is true if either x or y is true . Otherwise , the result is false . '' Also see Section 7.11 Conditional logical operators : `` The operation x || y corresponds to the operation x | y , except that y is evaluated only if x is false . '' which further `` legalizes '' | as a conditional operator . And people whoever will use C/C++ will be in trouble anyway if they just blindly assume that stuff works equally . As said : Using | in an if statement is a design smell , but a perfectly legal operation.\r\n – Michael Stum♦\r\n Jan 17 \'10 at 2:45\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 6\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n @ BlueRaja-DannyPflughoeft Calling a documented feature a hack when the documentation says that it was intended to be used , is like saying using a switch statement `` an elseif hack '' . Its a tool in the tool box , a rarely used specialty tool maybe , but a tool non the less.\r\n – Gent\r\n Jul 23 \'14 at 12:23\r\n \r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n | \r\n show 8 more comments\r\n \r\n \r\n \r\n\r\n\r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk253499662 '' ,4 ) .setZone ( 44 ) ; } ) ; \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 57\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\n|| is the logical OR operator . It sounds like you basically know what that is . It\ 's used in conditional statements such as if , while , etc.\n\ncondition1 || condition2\n\n\nEvaluates to true if either condition1 OR condition2 is true.\n\n| is the bitwise OR operator . It\ 's used to operate on two numbers . You look at each bit of each number individually and , if one of the bits is 1 in at least one of the numbers , then the resulting bit will be 1 also . Here are a few examples : \n\nA = 01010101\nB = 10101010\nA | B = 11111111\n\nA = 00000001\nB = 00010000\nA | B = 00010001\n\nA = 10001011\nB = 00101100\n\nA | B = 10101111\n\n\nHopefully that makes sense.\n\nSo to answer the last two questions , I wouldn\'t say there are any caveats besides `` know the difference between the two operators . '' They\ 're not interchangeable because they do two completely different things.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n \r\n edited Apr 29 \'11 at 3:42\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:17\r\n \r\n \r\n \r\n \r\n \r\n Evan Shaw\r\n \r\n 12.4k23849\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 24\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nOne is a `` bitwise or '' .\n\n10011b | 01000b = > 11011b\n\nThe other is a logic or.\n\ntrue or false = > true\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:13\r\n \r\n \r\n \r\n \r\n \r\n nsanders\r\n \r\n 7,00122843\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 8\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nGood question . These two operators work the same in PHP and C # .\n\n| is a bitwise OR . It will compare two values by their bits . E.g . 1101 | 0010 = 1111 . This is extremely useful when using bit options . E.g . Read = 01 ( 0X01 ) Write = 10 ( 0X02 ) Read-Write = 11 ( 0X03 ) . One useful example would be opening files . A simple example would be : \n\nFile.Open ( FileAccess.Read | FileAccess.Write ) ; //Gives read/write access to the file\n\n\n|| is a logical OR . This is the way most people think of OR and compares two values based on their truth . E.g . I am going to the store or I will go to the mall . This is the one used most often in code . E.g.\n\nif ( Name == `` Admin '' || Name == `` Developer ) { //allow access } //checks if name equals Admin OR Name equals Developer\n\n\nPHP Resource : http : //us3.php.net/language.operators.bitwise\n\nC # Resources : http : //msdn.microsoft.com/en-us/library/kxszd0kx ( VS.71 ) .aspx\n\nhttp : //msdn.microsoft.com/en-us/library/6373h346 ( VS.71 ) .aspx\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n \r\n edited Nov 17 \'10 at 13:38\r\n \r\n \r\n \r\n \r\n \r\n mercator\r\n \r\n 21.6k54963\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:23\r\n \r\n \r\n \r\n \r\n \r\n Trevor Abell\r\n \r\n 4792814\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n FWIW , Technically , in C # | is a logical or when applied to booleans . As your linked reference states . In practice , the end result is the same as if it were a bitwise operator , because the bitwise values of true and false are such that a bitwise or of their values produces the exact same result as a logical or does . That is ( int ) ( bool1 | bool2 ) == ( ( int ) bool1 ) | ( ( int ) bool2 ) .\r\n – ToolmakerSteve\r\n Sep 23 at 8:53\r\n \r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 3\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nSimple example in java\n\npublic class Driver { \n\n static int x ; \n static int y ; \n\npublic static void main ( String [ ] args ) \nthrows Exception { \n\nSystem.out.println ( `` using double pipe '' ) ; \n if ( setX ( ) || setY ( ) ) \n { System.out.println ( `` x = `` +x ) ; \n System.out.println ( `` y = `` +y ) ; \n } \n\n\n\nSystem.out.println ( `` using single pipe '' ) ; \nif ( setX ( ) | setY ( ) ) \n { System.out.println ( `` x = `` +x ) ; \n System.out.println ( `` y = `` +y ) ; \n } \n\n } \n\n static boolean setX ( ) { \n x=5 ; \n return true ; \n } \n static boolean setY ( ) { \n y=5 ; \n return true ; \n } \n } \n\n\noutput : \n\nusing double pipe\nx = 5\ny = 0\nusing single pipe\nx = 5\ny = 5\n\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Mar 23 \'12 at 8:02\r\n \r\n \r\n \r\n \r\n \r\n vishesh\r\n \r\n 89731545\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nThe single pipe , | , is one of the bitwise operators.\n\nFrom Wikipedia : \n\n\n In the C programming language family , the bitwise OR operator is `` | '' ( pipe ) . Again , this operator must not be confused with its Boolean `` logical or '' counterpart , which treats its operands as Boolean values , and is written `` || '' ( two pipes ) .\n\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:26\r\n \r\n \r\n \r\n \r\n \r\n codeLes\r\n \r\n 1,31511524\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 0\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nBy their mathematical definition , OR and AND are binary operators ; they verify the LHS and RHS conditions regardless , similarly to | and & . \n\n|| and & & alter the properties of the OR and AND operators by stopping them when the LHS condition isn\'t fulfilled.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 24 at 14:44\r\n \r\n \r\n \r\n \r\n \r\n Dan\r\n \r\n 11\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n -1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nThe | operator performs a bitwise OR of its two operands ( meaning both sides must evaluate to false for it to return false ) while the || operator will only evaluate the second operator if it needs to.\n\nhttp : //msdn.microsoft.com/en-us/library/kxszd0kx ( VS.71 ) .aspx\n\nhttp : //msdn.microsoft.com/en-us/library/6373h346 ( VS.71 ) .aspx\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:15\r\n \r\n \r\n \r\n \r\n \r\n homeskillet\r\n \r\n 7791810\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n If you actually read those articles , you would have seen that they are referring to bitwise operators\r\n – johnc\r\n Mar 2 \'09 at 3:01\r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n -1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nThe singe pipe `` | '' is the `` bitwise '' or and should only be used when you know what you\ 're doing . The double pipe `` || '' is a logical or , and can be used in logical statements , like `` x == 0 || x == 1 '' .\n\nHere\ 's an example of what the bitwise or does : if a=0101 and b=0011 , then a|b=0111 . If you\ 're dealing with a logic system that treats any non-zero as true , then the bitwise or will act in the same way as the logical or , but it\ 's counterpart ( bitwise and , `` & '' ) will NOT . Also the bitwise or does not perform short circuit evaluation.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:15\r\n \r\n \r\n \r\n \r\n \r\n Kyle Cronin\r\n \r\n 48k35126150\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n -1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nA single pipe ( | ) is the bitwise OR operator.\n\nTwo pipes ( || ) is the logical OR operator.\n\nThey are not interchangeable.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:16\r\n \r\n \r\n \r\n \r\n \r\n Dane\r\n \r\n 5,07041720\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n If you ignore the bitwise operation , double pipe is lazy evaluation and single pipe is greedy , within logical operator area.\r\n – Alex\r\n Oct 31 \'13 at 15:43\r\n \r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n -1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\n|| ( two pipes ) is usually a logical or while | ( one pipe ) is a binary or . Off the top of my head , I can\'t think of any time the difference would be a big gotcha ( other than when you\ 're assigning the result to something else ) . However I sure someone else will have a situation where it matters.\n\nEdit : Wow , six other answers in the time it took me to write this.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 29 \'08 at 21:16\r\n \r\n \r\n \r\n \r\n \r\n David Locke\r\n \r\n 7,18672548\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n -1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nBitwise ( | ) vs. logical ( || ) ! \nThink of logical as the Comparable objects in Java , comparing some distinguishable `` parts '' while the bitwise operator looks at these objects and instead of seeing if they are visually twins ( like logical does ) , does a DNA sample and looks at the 0\ 's and 1\ 's instead.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Jul 16 \'09 at 8:12\r\n \r\n \r\n \r\n \r\n \r\n mduvall\r\n \r\n 7331515\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t \r\n \r\n \r\n\t\t\t\t\t\t\tYour Answer\r\n\r\n\r\n \r\n StackExchange.ifUsing ( `` editor '' , function ( ) { \r\n StackExchange.using ( `` externalEditor '' , function ( ) { \r\n StackExchange.using ( `` snippets '' , function ( ) { \r\n StackExchange.snippets.init ( ) ; \r\n } ) ; \r\n } ) ; \r\n } , `` code-snippets '' ) ; \r\n \r\n \r\n\r\n\r\n StackExchange.ready ( function ( ) { \r\n initTagRenderer ( `` '' .split ( `` `` ) , `` '' .split ( `` `` ) ) ; \r\n \r\n StackExchange.using ( `` externalEditor '' , function ( ) { \r\n // Have to fire editor after snippets , if snippets enabled\r\n if ( StackExchange.settings.snippets.snippetsEnabled ) { \r\n StackExchange.using ( `` snippets '' , function ( ) { \r\n createEditor ( ) ; \r\n } ) ; \r\n } \r\n else { \r\n createEditor ( ) ; \r\n } \r\n } ) ; \r\n\r\n function createEditor ( ) { \r\n prepareEditor ( { \r\n heartbeatType : \'answer\ ' , \r\n convertImagesToLinks : true , \r\n reputationToPostImages : 10 , \r\n bindNavPrevention : true , \r\n postfix : `` '' , \r\n onDemand : true , \r\n discardSelector : `` .discard-answer '' \r\n , immediatelyShowMarkdownHelp : true\r\n } ) ; \r\n \r\n\r\n } \r\n } ) ; \r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n draft saved\r\n\r\n draft discarded\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t \r\n \r\n \r\n \r\n Sign up or log in\r\n \r\n StackExchange.ready ( function ( ) { \r\n StackExchange.helpers.onClickDraftSave ( \ ' # login-link\ ' ) ; \r\n } ) ; \r\n \r\n \r\n Sign up using Google\r\n \r\n \r\n Sign up using Facebook\r\n \r\n \r\n Sign up using Email and Password\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Post as a guest\r\n \r\n \r\n \r\n \r\n \r\n Name\r\n \r\n \r\n \r\n Email\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n StackExchange.ready ( \r\n function ( ) { \r\n StackExchange.openid.initPostLogin ( \'.new-post-login\ ' , \'http % 3a % 2f % 2fstackoverflow.com % 2fquestions % 2f35301 % 2fwhat-is-the-difference-between-the-and-or-operators % 23new-answer\ ' , \'question_page\ ' ) ; \r\n } \r\n ) ; \r\n \r\n \r\n Post as a guest\r\n \r\n \r\n \r\n \r\n \r\n Name\r\n \r\n \r\n \r\n Email\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n\t\t\t\t\t\t\t\r\n \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdiscard\r\n\r\n\r\nBy posting your answer , you agree to the privacy policy and terms of service.\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t\t\t\t\r\nNot the answer you 're looking for ? \t\t\t\t\t\t\tBrowse other questions tagged c # php operators or ask your own question.\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t asked\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 8 years ago\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t viewed\r\n\t\t\t \r\n\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 60544 times\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t active\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 2 months ago\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t\t\t\t\r\n\t\t\t\r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk1205397947 '' , [ 5,17,2221 ] ) .setZone ( 45 ) ; } ) ; \r\n \r\n \r\n \r\n \r\n ; ( function ( n ) { var u=Object.assign||function ( n ) { for ( var i , r , u , f , e= [ ] , t=1 ; t < arguments.length ; t++ ) e [ t-1 ] =arguments [ t ] ; for ( i=0 , r=e ; i < r.length ; i++ ) { u=r [ i ] ; for ( f in u ) n [ f ] =u [ f ] } return n } , r , t , f , i ; try { if ( typeof [ ] .indexOf ! = '' function '' ) return ; if ( window.attachEvent & & ! window.addEventListener ) return ; if ( r= [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , r [ 0 ] ! == '' * '' & & r.indexOf ( location.hostname ) ===-1 ) return ; t=window ; f=t.clc_opts ? u ( { } , window.clc_opts ) : { } ; t.clc_opts=u ( n , f ) ; void 0 ; t.clc_opts.autoload & & ( t.clc_init=t.clc_init|| [ ] , t.clc_init.push ( function ( ) { return t.clc.load ( ) } ) ) ; i=document.createElement ( `` script '' ) ; i.async= ! 0 ; void 0 ; i.src=t.clc_opts.lib ; document.body.appendChild ( i ) } catch ( e ) { void 0 } } ) .call ( null , { `` azw '' : true , '' kt '' :2000 , '' autoload '' : true , '' tto '' : true , '' d '' : { `` sb '' : [ `` hireme '' , '' clc-sb '' ] , '' tlb '' : [ `` careers1 '' , '' clc-tlb '' ] , '' mlb '' : [ `` careers3 '' , '' clc-mlb '' ] } , '' allowed '' : [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , '' h '' : '' clc.stackoverflow.com '' , '' u '' : '' //clc.stackoverflow.com/p.js '' , '' lib '' : '' //cdn.sstatic.net/clc/clc.min.js ? v=949796768e2b '' } ) ; \r\n \r\nwindow.clcfl_request = \'AtFwrNUYIdQIAAAAAOWJAAACAAAAAgAAAAASAAAAfGMjfHBocHxvcGVyYXRvcnN8ADUGEcDF6S8rZzI\ ' ; \r\n ; ( function ( n ) { var t , i ; try { if ( typeof [ ] .indexOf ! = '' function '' ) return ; if ( window.attachEvent & & ! window.addEventListener ) return ; if ( n.allowed [ 0 ] ! == '' * '' & & n.allowed.indexOf ( location.hostname ) ===-1 ) return ; t=window ; t.clcfl=t.clcfl|| { } ; t.clcfl_request||void 0 ; t.clcfl.init=t.clcfl.init|| [ ] ; t.clcfl.init.push ( function ( n ) { return n.load ( ) } ) ; t.clcfl.options=n ; i=document.createElement ( `` script '' ) ; i.async= ! 0 ; i.src=n.lib ; document.body.appendChild ( i ) } catch ( r ) { } } ) .call ( null , { `` azw '' : true , '' kt '' :2000 , '' autoload '' : true , '' tto '' : false , '' d '' : { `` sb '' : [ `` hireme '' , '' clc-sb '' ] , '' tlb '' : [ `` careers1 '' , '' clc-tlb '' ] , '' mlb '' : [ `` careers3 '' , '' clc-mlb '' ] } , '' allowed '' : [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , '' h '' : '' clc.stackoverflow.com '' , '' u '' : '' //clc.stackoverflow.com/fl/markup-bg.js '' , '' lib '' : '' //cdn.sstatic.net/clc/fl/clc.min.js ? v=b8405c6e42c0 '' } ) ; \r\n \r\n\t\t\t\r\n\r\n \r\n\tLinked\r\n\t\r\n\r\n\r\n\t\r\n\t\t27\r\n\t\r\n\tWhat is the difference between logical and conditional AND , OR in C # ? \r\n\r\n\r\n\t\r\n\t\t2\r\n\t\r\n\tWhat does a single | or & mean ? \r\n\r\n\r\n\t\r\n\t\t-5\r\n\t\r\n\tWhat does it mean when there are two pipes ( || ) next to each other ? \r\n\r\n\r\n\t\r\n\t\t0\r\n\t\r\n\tlogical OR bitwise OR interchangeable ? \r\n\r\n\r\n\t\r\n\t\t22\r\n\t\r\n\tHelp refactoring this C # function\r\n\r\n\r\n\t\r\n\t\t28\r\n\t\r\n\tDifference between | and || or & and & & for comparison\r\n\r\n\r\n\t\r\n\t\t11\r\n\t\r\n\tWhat does | ( pipe ) mean in c # ? \r\n\r\n\r\n\t\r\n\t\t0\r\n\t\r\n\tJava - explanation for using “ | ” ? \r\n\r\n\r\n\t\r\n\t\t2\r\n\t\r\n\tWhat is the point of the single AND operator in C # ? \r\n\r\n\r\n\t\r\n\t\t-1\r\n\t\r\n\tUse of | ( or ) operator in C # \r\n\t\t\t\t\t\r\n\t\t\t\tsee more linked questions\xe2\x80\xa6\r\n\t\t\t\r\n\t\r\n\r\n\r\n\t\t\t\t\r\n\t\t\t\t\tRelated\r\n \r\n 3915What is the difference between String and string in C # ? 676What is the difference between const and readonly ? 4216Which equals operator ( == vs === ) should be used in JavaScript comparisons ? 2783Does Python have a ternary conditional operator ? 1506What is the ! ! ( not not ) operator in JavaScript ? 6015What is the name of the “ -- > ” operator in C++ ? 2744Reference - What does this symbol mean in PHP ? 1489Operator overloading1264What does the C ? ? ! ? ? ! operator do ? 2801Java 's += , -= , *= , /= compound assignment operators\r\n \r\n\t\t\t\t\r\n \r\n\r\n \r\n \r\n Hot Network Questions\r\n \r\n \r\n \r\n \r\n \r\n How are brakes cooled on heavy aircraft ? \r\n \r\n\r\n \r\n \r\n \r\n How to get my passport back to me in Michigan from a travel agent in California , when he wants me to buy his services ? \r\n \r\n\r\n \r\n \r\n \r\n Am I allowed to take alcoholic beverages from the US in my luggage , if I 'm under 21 ? \r\n \r\n\r\n \r\n \r\n \r\n Who is spreading the rumour that Santa is n't real ? \r\n \r\n\r\n \r\n \r\n \r\n Why ca n't I drive this Tapcon into concrete ? \r\n \r\n\r\n \r\n \r\n \r\n Game build in unity3d project transfer from a previous developer\r\n \r\n\r\n \r\n \r\n \r\n If `` eng mit '' means `` closely related , '' why would it be necessary to add the verb `` zusammenhängen ? `` \r\n \r\n\r\n \r\n \r\n \r\n What are the possible characters for a German passport number ? \r\n \r\n\r\n \r\n \r\n \r\n Add a language to a polyglot\r\n \r\n\r\n \r\n \r\n \r\n Seventeen year old daughter wants to take international trip to meet someone she met online\r\n \r\n\r\n \r\n \r\n \r\n Why do 1 pF capacitors exist ? \r\n \r\n\r\n \r\n \r\n \r\n Which are the episodes in Star Trek series with courtroom drama ? \r\n \r\n\r\n \r\n \r\n \r\n The sea in your terminal\r\n \r\n\r\n \r\n \r\n \r\n What is a cantrip and what page are they on ? \r\n \r\n\r\n \r\n \r\n \r\n Why are there no toilets on the starship 'Exciting Undertaking ' ? \r\n \r\n\r\n \r\n \r\n \r\n How do you judge the potential of a newer journal ? \r\n \r\n\r\n \r\n \r\n \r\n A gift that you give to someone that is actually more a gift to yourself ? \r\n \r\n\r\n \r\n \r\n \r\n How to handle a highly productive employee but who reacts extremely emotionally to code reviews ? \r\n \r\n\r\n \r\n \r\n \r\n Is it accepted/common to answer factually inaccurate reviewer comments in case of rejection ? \r\n \r\n\r\n \r\n \r\n \r\n What is the most possible candidates that could tie for the US President in the Electoral College\r\n \r\n\r\n \r\n \r\n \r\n Adjective for `` a property or a responsiblity that is not owned/assumed by anyone '' \r\n \r\n\r\n \r\n \r\n \r\n Most useful knowledge from the 30 's to understand current state of computers & networking ? \r\n \r\n\r\n \r\n \r\n \r\n When does an automatic app update happen on iOS ? \r\n \r\n\r\n \r\n \r\n \r\n How can we reduce the likelihood of repeating our parents ' mistakes ? \r\n \r\n\r\n \r\n \r\n\r\n \r\n more hot questions\r\n \r\n\r\n\t\t\r\n\t\r\n\r\n \r\n \r\n question feed\r\n \r\n \r\n\t\r\nStackExchange.ready ( function ( ) { $ .get ( \'/posts/35301/ivc/363d\ ' ) ; } ) ; \r\n\r\n\r\n \r\ndefault\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n about us\r\n tour\r\n help\r\n blog\r\n chat\r\n data\r\n legal\r\n privacy policy\r\n work here\r\n advertising info\r\n\r\n mobile\r\n contact us\r\n feedback\r\n \r\n \r\n \r\n \r\n \r\n \r\n Technology\r\n \r\n \r\n Life / Arts\r\n \r\n \r\n Culture / Recreation\r\n \r\n \r\n Science\r\n \r\n \r\n Other\r\n \r\n \r\n \r\n \r\n \r\n Stack Overflow\r\n Server Fault\r\n Super User\r\n Web Applications\r\n Ask Ubuntu\r\n Webmasters\r\n Game Development\r\n TeX - LaTeX\r\n \r\n Software Engineering\r\n Unix & Linux\r\n Ask Different ( Apple ) \r\n WordPress Development\r\n Geographic Information Systems\r\n Electrical Engineering\r\n Android Enthusiasts\r\n Information Security\r\n \r\n Database Administrators\r\n Drupal Answers\r\n SharePoint\r\n User Experience\r\n Mathematica\r\n Salesforce\r\n ExpressionEngine® Answers\r\n Cryptography\r\n \r\n Code Review\r\n Magento\r\n Signal Processing\r\n Raspberry Pi\r\n Programming Puzzles & Code Golf\r\n \r\n \r\n \r\n more ( 7 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n Photography\r\n Science Fiction & Fantasy\r\n Graphic Design\r\n Movies & TV\r\n Music : Practice & Theory\r\n Seasoned Advice ( cooking ) \r\n Home Improvement\r\n Personal Finance & Money\r\n \r\n Academia\r\n \r\n \r\n \r\n more ( 8 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n English Language & Usage\r\n Skeptics\r\n Mi Yodeya ( Judaism ) \r\n Travel\r\n Christianity\r\n English Language Learners\r\n Japanese Language\r\n Arqade ( gaming ) \r\n \r\n Bicycles\r\n Role-playing Games\r\n Anime & Manga\r\n Motor Vehicle Maintenance & Repair\r\n \r\n \r\n \r\n more ( 17 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n MathOverflow\r\n Mathematics\r\n Cross Validated ( stats ) \r\n Theoretical Computer Science\r\n Physics\r\n Chemistry\r\n Biology\r\n Computer Science\r\n \r\n Philosophy\r\n \r\n \r\n \r\n more ( 3 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n Meta Stack Exchange\r\n Stack Apps\r\n Area 51\r\n Stack Overflow Talent\r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n site design / logo © 2016 Stack Exchange Inc ; user contributions licensed under cc by-sa 3.0 \r\n with attribution required\r\n \r\n \r\n rev 2016.12.9.4320\r\n \r\n \r\n \r\n \r\n Stack Overflow works best with JavaScript enabled\r\n \r\n\r\nvar p = `` http '' , d = `` static '' ; if ( document.location.protocol == `` https : '' ) { p += `` s '' ; d = `` engine '' ; } var z = document.createElement ( `` script '' ) ; z.type = `` text/javascript '' ; z.async = true ; z.src = p + `` : // '' + d + `` .adzerk.net/ados.js '' ; var s = document.getElementsByTagName ( `` script '' ) [ 0 ] ; s.parentNode.insertBefore ( z , s ) ; \r\n\r\n var ados = ados || { } ; \r\n ados.run = ados.run || [ ] ; \r\n \r\n \r\n \r\n ados.run.push ( function ( ) { \r\n setTimeout ( function ( ) { $ ( `` # adzerk-user-match '' ) .remove ( ) ; } , window.AUMIframeDone ? 0 : 2000 ) ; \r\n ados_setKeywords ( \'c % 23 , php , operators\ ' ) ; ; ados_load ( ) ; \r\n } ) ; \r\n \r\n\r\n\r\n \r\n ( function ( i , s , o , g , r , a , m ) { \r\n i [ \'GoogleAnalyticsObject\ ' ] = r ; i [ r ] = i [ r ] || function ( ) { ( i [ r ] .q = i [ r ] .q || [ ] ) .push ( arguments ) } , i [ r ] .l = 1 * new Date ( ) ; a = s.createElement ( o ) , \r\n m = s.getElementsByTagName ( o ) [ 0 ] ; a.async = 1 ; a.src = g ; m.parentNode.insertBefore ( a , m ) ; \r\n } ) ( window , document , \'script\ ' , \'https : //www.google-analytics.com/analytics.js\ ' , \'ga\ ' ) ; \r\n \r\n ga ( \'create\ ' , \'UA-5620270-1\ ' ) ; \r\n \r\n ga ( \'create\ ' , \'UA-5620270-59\ ' , \'auto\ ' , \'pageData\ ' ) ; \r\n \r\n ga ( \'set\ ' , \'dimension2\ ' , \'|c # |php|operators|\ ' ) ; ga ( \'pageData.set\ ' , \'dimension2\ ' , \'|c # |php|operators|\ ' ) ; ga ( \'send\ ' , \'pageview\ ' ) ; \r\n ga ( \'pageData.send\ ' , \'pageview\ ' ) ; \r\n\r\n var _qevents = _qevents || [ ] , \r\n _comscore = _comscore || [ ] ; \r\n ( function ( ) { \r\n var ssl=\'https : \'==document.location.protocol , \r\n s=document.getElementsByTagName ( \'script\ ' ) [ 0 ] , \r\n qc=document.createElement ( \'script\ ' ) ; \r\n qc.async = true ; \r\n qc.src = ( ssl ? \'https : //secure\ ' : \'http : //edge\ ' ) + \'.quantserve.com/quant.js\ ' ; \r\n s.parentNode.insertBefore ( qc , s ) ; \r\n _qevents.push ( { qacct : `` p-c1rF4kxgLUzNc '' } ) ; \r\n var sc=document.createElement ( \'script\ ' ) ; \r\n sc.async=true ; \r\n sc.src= ( ssl ? \'https : //sb\ ' : \'http : //b\ ' ) + \'.scorecardresearch.com/beacon.js\ ' ; \r\n s.parentNode.insertBefore ( sc , s ) ; \r\n _comscore.push ( { c1 : `` 2 '' , c2 : `` 17440561 '' } ) ; \r\n } ) ( ) ; \r\n\r\n \r\n \r\n \r\n \r\n \r\n ( function ( appendChild ) { \r\n Node.prototype.appendChild = function ( ) { \r\n var parent = this ; \r\n var newNode = arguments [ 0 ] ; \r\n if ( parent.nodeName === \'HEAD\'\r\n & & newNode\r\n & & newNode.nodeName === \'SCRIPT\'\r\n & & newNode.src ) { \r\n \r\n window.setTimeout ( function ( ) { \r\n var result = newNode.src.match ( /^https : \\/\\/maps\\.googleapis\\.com\\/maps\\/api\\/place\\/js\\/ ( \\w+ ) Service\\./i ) || [ ] ; \r\n var service = result [ 1 ] ; \r\n if ( service ) { \r\n if ( service === \'Autocompletion\ ' ) service = 2 ; \r\n else if ( service === \'Place\ ' ) service = 1 ; \r\n else service = 0 ; \r\n StackExchange.using ( \'gps\ ' , function ( ) { \r\n StackExchange.gps.track ( \'google_maps_places_api.call\ ' , { service : service } ) ; \r\n } ) ; \r\n } \r\n } , 0 ) ; \r\n } \r\n return appendChild.apply ( this , arguments ) ; \r\n } ; \r\n } ) ( Node.prototype.appendChild ) ; \r\n \r\n \r\n ' 