b'\r\n\r\n\r\n\r\n\r\noop - Which class design is better ? - Stack Overflow\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n StackExchange.ready ( function ( ) { \r\n \r\n StackExchange.using ( `` snippets '' , function ( ) { \r\n StackExchange.snippets.initSnippetRenderer ( ) ; \r\n } ) ; \r\n \r\n\r\n StackExchange.using ( `` postValidation '' , function ( ) { \r\n StackExchange.postValidation.initOnBlurAndSubmit ( $ ( \ ' # post-form\ ' ) , 2 , \'answer\ ' ) ; \r\n } ) ; \r\n\r\n \r\n StackExchange.question.init ( { showAnswerHelp : true , totalCommentCount:0 , shownCommentCount:0 , highlightColor : \ ' # F4A83D\ ' , backgroundColor : \ ' # FFF\ ' , questionId:38820 } ) ; \r\n\r\n styleCode ( ) ; \r\n\r\n StackExchange.realtime.subscribeToQuestion ( \'1\ ' , \'38820\ ' ) ; \r\n StackExchange.using ( `` gps '' , function ( ) { StackExchange.gps.trackOutboundClicks ( \ ' # content\ ' , \'.post-text\ ' , true ) ; } ) ; \r\n\r\n } ) ; \r\n \r\n\r\n\r\n \r\n StackExchange.init ( { `` locale '' : '' en '' , '' stackAuthUrl '' : '' https : //stackauth.com '' , '' networkMetaHostname '' : '' meta.stackexchange.com '' , '' serverTime '' :1481329376 , '' routeName '' : '' Questions/Show '' , '' site '' : { `` name '' : '' Stack Overflow '' , '' description '' : '' Q & A for professional and enthusiast programmers '' , '' isNoticesTabEnabled '' : true , '' recaptchaPublicKey '' : '' 6LdchgIAAAAAAJwGpIzRQSOFaO0pU6s44Xt8aTwc '' , '' recaptchaAudioLang '' : '' en '' , '' enableNewTagCreationWarning '' : true , '' insertSpaceAfterNameTabCompletion '' : false , '' id '' :1 , '' enableInsertDocLinkDialog '' : true , '' enableSocialMediaInSharePopup '' : true } , '' user '' : { `` fkey '' : '' 7b1b7f4e1a6b23324556540c1e6d03a0 '' , '' rep '' :0 , '' isAnonymous '' : true , '' isAnonymousNetworkWide '' : true } , '' events '' : { `` postType '' : { `` question '' :1 } , '' postEditionSection '' : { `` title '' :1 , '' body '' :2 , '' tags '' :3 } } , '' story '' : { `` minCompleteBodyLength '' :75 } } , { `` site '' : { `` allowImageUploads '' : true , '' enableUserHovercards '' : true , '' styleCode '' : true , '' enableNewLinkInsertDialog '' : true , '' enableNewHeaderDesign '' : true , '' enableImgurHttps '' : true } , '' comments '' : { } , '' tags '' : { } , '' accounts '' : { `` currentPasswordRequiredForChangingStackIdPassword '' : true } , '' flags '' : { `` allowRetractingFlags '' : true } , '' analytics '' : { `` clientTimingsAbsoluteTimeout '' :30000 , '' clientTimingsDebounceTimeout '' :1000 } , '' snippets '' : { `` snippetsEnabled '' : true , '' renderDomain '' : '' stacksnippets.net '' } , '' markdown '' : { `` asteriskIntraWordEmphasis '' : true } } ) ; \r\n StackExchange.using.setCacheBreakers ( { `` js/prettify-full.en.js '' : '' 06d67193cff4 '' , '' js/moderator.en.js '' : '' 1bdc231dc7f5 '' , '' js/full-anon.en.js '' : '' 49075288bf9b '' , '' js/full.en.js '' : '' 53dd47f49d45 '' , '' js/wmd.en.js '' : '' 1966ce920971 '' , '' js/third-party/jquery.autocomplete.min.js '' : '' e5f01e97f7c3 '' , '' js/third-party/jquery.autocomplete.min.en.js '' : '' '' , '' js/mobile.en.js '' : '' 3c7426a1302d '' , '' js/help.en.js '' : '' 12aebc9f0272 '' , '' js/tageditor.en.js '' : '' 820420283947 '' , '' js/tageditornew.en.js '' : '' 8b70577d4cf5 '' , '' js/inline-tag-editing.en.js '' : '' 2ddfa79492e7 '' , '' js/revisions.en.js '' : '' f4d14ad9db6c '' , '' js/review.en.js '' : '' 45ded0b70a10 '' , '' js/tagsuggestions.en.js '' : '' d1ff9b84abe5 '' , '' js/post-validation.en.js '' : '' 38ab6ae8a4a3 '' , '' js/explore-qlist.en.js '' : '' e71f14781288 '' , '' js/events.en.js '' : '' e449ebf70756 '' , '' js/keyboard-shortcuts.en.js '' : '' 4d22dd1bfd37 '' , '' js/external-editor.en.js '' : '' 5441bf1fb1b5 '' , '' js/external-editor.en.js '' : '' 5441bf1fb1b5 '' , '' js/snippet-javascript.en.js '' : '' 07c320a2d73c '' , '' js/snippet-javascript-codemirror.en.js '' : '' aa028aaeae06 '' } ) ; \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.init ( true ) ; \r\n } ) ; \r\n \r\n \r\n \r\n StackExchange.ready ( function ( ) { \r\n $ ( \ ' # nav-tour\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` aboutpage.click '' , { aboutclick_location : `` headermain '' } , true ) ; \r\n } ) ; \r\n } ) ; \r\n } ) ; \r\n \r\n\r\n\r\n \r\n ( function ( ) { var old = $ .fn.contents ; $ .fn.contents = function ( ) { try { return old.apply ( this , arguments ) ; } catch ( e ) { return $ ( [ ] ) ; } } } ) ( ) \r\n \r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n \r\n \r\n current community\r\n \r\n \r\n \r\n \r\n \r\n \r\n chat\r\n \r\n\r\n\r\n\r\n\r\n \r\n \r\n Stack Overflow\r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n \r\n Meta Stack Overflow\r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\nyour communities \r\n\r\n \r\n \r\n\r\n \r\nSign up or log in to customize your list.\r\n \r\n \r\n\r\n \r\n more stack exchange communities\r\n \r\n company blog\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n Stack Exchange\r\n \r\n\r\n \r\n Inbox\r\n \r\n \r\n \r\n Reputation and Badges\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n \r\n \r\n sign up\r\n log in\r\n\r\n tour\r\n \r\n help\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Tour\r\n \r\n Start here for a quick overview of the site\r\n \r\n \r\n \r\n \r\n \r\n Help Center\r\n \r\n Detailed answers to any questions you might have\r\n \r\n \r\n \r\n \r\n \r\n Meta\r\n \r\n Discuss the workings and policies of this site\r\n \r\n \r\n \r\n \r\n \r\n About Us\r\n \r\n Learn more about Stack Overflow the company\r\n \r\n \r\n \r\n \r\n \r\n Business\r\n \r\n Learn more about hiring developers or posting ads with us\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n StackExchange.ready ( function ( ) { StackExchange.topbar.init ( ) ; } ) ; \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n Stack Overflow\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Questions\r\n \r\n \r\n\r\n \r\n \r\n Jobs\r\n \r\n \r\n \r\n \r\n Documentation\r\n \r\n \r\n \r\n \r\n Tags\r\n \r\n \r\n\r\n \r\n \r\n Users\r\n \r\n \r\n\r\n \r\n \r\n Badges\r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n Ask Question\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n x Dismiss\r\n \r\n \r\n Join the Stack Overflow Community\r\n \r\n \r\n Stack Overflow is a community of 6.4 million programmers , just like you , helping each other.\r\n \r\nJoin them ; it only takes a minute : \r\n \r\n Sign up\r\n \r\n \r\n\r\n StackExchange.ready ( function ( ) { \r\n\r\n var location = 0 ; \r\n if ( $ ( `` body '' ) .hasClass ( `` questions-page '' ) ) { \r\n location = 1 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` question-page '' ) ) { \r\n location = 1 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` faq-page '' ) ) { \r\n location = 5 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` home-page '' ) ) { \r\n location = 3 ; ; \r\n } \r\n\r\n $ ( \ ' # tell-me-more\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` hero.action '' , { hero_action_type : \'cta\ ' , location : location } , true ) ; \r\n } ) ; \r\n } ) ; \r\n $ ( \ ' # herobox # close\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` hero.action '' , { hero_action_type : `` minimize '' , location : location } , true ) ; \r\n } ) ; \r\n $ .cookie ( `` hero '' , `` mini '' , { path : `` / '' , expires : 365 } ) ; \r\n $ .ajax ( { \r\n url : `` /hero-mini '' , \r\n success : function ( data ) { \r\n $ ( `` # herobox '' ) .fadeOut ( `` fast '' , function ( ) { \r\n $ ( `` # herobox '' ) .replaceWith ( data ) ; \r\n $ ( `` # herobox-mini '' ) .fadeIn ( `` fast '' ) ; \r\n } ) ; \r\n } \r\n } ) ; \r\n return false ; \r\n } ) ; \r\n } ) ; \r\n\r\n\t\t\t\r\n Which class design is better ? [ closed ] \r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n \r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk323235655 '' ,4 ) .setZone ( 43 ) ; } ) ; \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 23\r\n down vote\r\n\r\n favorite\r\n 16\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n \r\n\r\nWhich class design is better and why ? \n\npublic class User\n { \n public String UserName ; \n public String Password ; \n public String FirstName ; \n public String LastName ; \n } \n\npublic class Employee : User\n { \n public String EmployeeId ; \n public String EmployeeCode ; \n public String DepartmentId ; \n } \n\npublic class Member : User\n { \n public String MemberId ; \n public String JoinDate ; \n public String ExpiryDate ; \n } \n\n\nOR\n\npublic class User\n { \n public String UserId ; \n public String UserName ; \n public String Password ; \n public String FirstName ; \n public String LastName ; \n } \n\npublic class Employee\n { \n public User UserInfo ; \n public String EmployeeId ; \n public String EmployeeCode ; \n public String DepartmentId ; \n } \n\npublic class Member\n { \n public User UserInfo ; \n public String MemberId ; \n public String JoinDate ; \n public String ExpiryDate ; \n } \n\n \r\n \r\n oop class-design \r\n \r\n \r\n \r\n \r\nshare|improve this question \r\n \r\n \r\n\r\n \r\n edited Sep 2 \'08 at 4:46\r\n \r\n \r\n \r\n \r\n \r\n Sander\r\n \r\n 16.1k33666\r\n \r\n \r\n \r\n \r\n \r\n \r\n asked Sep 2 \'08 at 4:34\r\n \r\n \r\n \r\n \r\n \r\n Ramesh Soni\r\n \r\n 7,5452373107\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n closed as too broad by George Stockerâ™¦ Aug 21 \'14 at 16:45\r\n\r\n There are either too many possible answers , or good answers would be too long for this format . Please add details to narrow the answer set or to isolate an issue that can be answered in a few paragraphs.If this question can be reworded to fit the rules in the help center , please edit the question.\r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n\t\t\t\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t11 Answers\r\n 11\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n \r\n active\r\n \r\n oldest\r\n \r\n votes\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t \r\n\t\t\t\t \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 44\r\n down vote\r\n\r\n\r\n\r\n accepted\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nThe question is simply answered by recognising that inheritance models an `` IS-A '' relationship , while membership models a `` HAS-A '' relationship.\n\n\nAn employee IS A user\nAn employee HAS A userinfo\n\n\nWhich one is correct ? This is your answer.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n \r\n edited Sep 2 \'08 at 4:46\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 4:41\r\n \r\n \r\n \r\n \r\n \r\n 1800 INFORMATION\r\n \r\n 80.1k21122212\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Brilliantly put ! \r\n â€“ Jon Cram\r\n Dec 27 \'08 at 21:11\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 27\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Sorry , while common , this is a terrible way to reason about design . Human languages are vague and imprecise , programming languages ca n't afford to be.\r\n â€“ CurtainDog\r\n Jan 21 \'11 at 0:08\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 3\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n I believe it 's good practice to favor aggregation over inheritance . I think that makes sense here.\r\n â€“ gsingh2011\r\n Jun 26 \'12 at 13:40\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 1\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n I 'd extend that a bit further to say that an employee HAS a userinfo in the context of this domain . If you find that your employee has a postcode simply because a user does , but for the business purposes of an employee , the postcode is n't needed ( it is forced on you by the contract of a user ) then composition may be more appropriate than inheritence in such a case.\r\n â€“ 8bitjunkie\r\n Apr 15 \'14 at 13:16\r\n \r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk850367638 '' ,4 ) .setZone ( 44 ) ; } ) ; \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 15\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nI don\'t like either one . What happens when someone is both a member and an employee ? \n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 4:39\r\n \r\n \r\n \r\n \r\n \r\n Brad Wilson\r\n \r\n 33.7k65875\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n 4\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n If each of the classes implemented interfaces , and you extracted the common attributes out of each one , you could have your new class implement Member and Employee , contain the right instances of the common classes plus the extra ones you need , and delegate.\r\n â€“ moffdub\r\n Jan 24 \'09 at 1:09\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 1\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Your concern , which is valid , is an argument for the 2nd design , not an argument against both.\r\n â€“ Jonah\r\n Oct 3 \'15 at 15:44\r\n \r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 15\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nAsk yourself the following : \n\n\nDo you want to model an Employee IS a User ? If so , chose inheritance.\nDo you want to model an Employee HAS a User information ? If so , use composition.\nAre virtual functions involved between the User ( info ) and the Employee ? If so , use inheritance.\nCan an Employee have multiple instances of User ( info ) ? If so , use composition.\nDoes it make sense to assign an Employee object to a User ( info ) object ? If so , use inheritance.\n\n\nIn general , strive to model the reality your program simulates , under the constraints of code complexity and required efficiency.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 5:03\r\n \r\n \r\n \r\n \r\n \r\n wilhelmtell\r\n \r\n 35.6k1077115\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Could you please explain more parts 3 , 4 and 5 ? Thanks in advance\r\n â€“ Trix\r\n May 30 at 12:31\r\n \r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 11\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nI don\'t think composition is always better than inheritance ( just usually ) . If Employee and Member really are Users , and they are mutually exclusive , then the first design is better . Consider the scenario where you need to access the UserName of an Employee . Using the second design you would have : \n\nmyEmployee.UserInfo.UserName\n\n\nwhich is bad ( law of Demeter ) , so you would refactor to : \n\nmyEmployee.UserName\n\n\nwhich requires a small method on Employee to delegate to the User object . All of which is avoided by the first design.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 5:46\r\n \r\n \r\n \r\n \r\n \r\n liammclennan\r\n \r\n 4,17322430\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 11\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nNice question although to avoid distractions about right and wrong I\ 'd consider asking for the pros and cons of each approach -- I think that\ 's what you meant by which is better or worse and why . Anyway ... .\n\nThe First Approach aka Inheritance\n\nPros : \n\n\nAllows polymorphic behavior.\nIs initially simple and convenient.\n\n\nCons : \n\n\nMay become complex or clumsy over time if more behavior and relations are added.\n\n\nThe Second Approach aka Composition\n\nPros : \n\n\nMaps well to non-oop scenarios like relational tables , structured programing , etc\nIs straightforward ( if not necessarily convenient ) to incrementally extend relations and behavior.\n\n\nCons : \n\n\nNo polymorphism therefore it\ 's less convenient to use related information and behavior\n\n\nLists like these + the questions Jon Limjap mentioned will help you make decisions and get started -- then you can find what the right answers should have been ; - ) \n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 9 \'08 at 4:07\r\n \r\n \r\n \r\n \r\n \r\n maccullt\r\n \r\n 2,1151115\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n It 's simple to make the second approach polymorphic . Both member and employee expose a userinfo , this behaviour could be pulled up to a parent.\r\n â€“ CurtainDog\r\n Jan 20 \'11 at 23:58\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Could you please explain `` polymorphic behaviour '' section of your answer ? \r\n â€“ Trix\r\n May 30 at 12:35\r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 5\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nThe real questions are : \n\n\nWhat are the business rules and user stories behind a user ? \nWhat are the business rules and user stories behind an employee ? \nWhat are the business rules and user stories behind a member ? \n\n\nThese can be three completely unrelated entities or not , and that will determine whether your first or second design will work , or if another completely different design is in order.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 5:43\r\n \r\n \r\n \r\n \r\n \r\n Jon Limjap\r\n \r\n 64.4k1485139\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 4\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nNeither one is good . Too much mutable state . You should not be able to construct an instance of a class that is in an invalid or partially initialized state.\n\nThat said , the second one is better because it favours composition over inheritance.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 4:47\r\n \r\n \r\n \r\n \r\n \r\n Apocalisp\r\n \r\n 27.6k382134\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n What do you mean by first part of your answer ? do you mean using Abstract / Interface ? \r\n â€“ Trix\r\n May 30 at 13:51\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n 1\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n I mean that any object returned from a constructor should be safe to use and not require further initialization.\r\n â€“ Apocalisp\r\n May 30 at 23:11\r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 4\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nYou can also think of Employee as a role of the User ( Person ) . The role of a User can change in time ( user can become unemployed ) or User can have multiple roles at the same time . \n\nInheritance is much better when there is real `` is a '' relation , for example Apple - Fruit . But be very careful : Circle - Ellipse is not real `` is a '' relation , because cirlce has less `` freedom '' than ellipse ( circle is a state of ellipse ) - see : Circle Ellipse problem.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n \r\n edited Aug 21 \'14 at 19:59\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 21 \'14 at 16:04\r\n \r\n \r\n \r\n \r\n \r\n Marcin Raczy\xc5\x84ski\r\n \r\n 33337\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 3\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nStating your requirement/spec might help arrive at the \'best design\'.\nYour question is too \'subject-to-reader-interpretation\ ' at the moment.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 7:43\r\n \r\n \r\n \r\n \r\n \r\n Gishu\r\n \r\n 82.5k36182265\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 2\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nHere\ 's a scenario you should think about : \n\nComposition ( the 2nd example ) is preferable if the same User can be both an Employee and a Member . Why ? Because for two instances ( Employee and Member ) that represent the same User , if User data changes , you don\'t have to update it in two places . Only the User instance contains all the User information , and only it has to be updated . Since both Employee and Member classes contain the same User instance , they will automatically both contain the updated information.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 2 \'08 at 7:54\r\n \r\n \r\n \r\n \r\n \r\n Jonathan\r\n \r\n 3,66952239\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 0\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nThree more options : \n\n\nHave the User class contain the supplemental information for both employees and members , with unused fields blank ( the ID of a particular User would indicate whether the user was an employee , member , both , or whatever ) .\nHave an User class which contains a reference to an ISupplementalInfo , where ISupplementalInfo is inherited by ISupplementalEmployeeInfo , ISupplementalMemberInfo , etc . Code which is applicable to all users could work with User class objects , and code which had a User reference could get access to a user\ 's supplemental information , but this approach would avoid having to change User if different combinations of supplemental information are required in future.\nAs above , but have the User class contain some kind of collection of ISupplementalInfo . This approach would have the advantage of facilitating the run-time addition of properties to a user ( e.g . because a Member got hired ) . When using the previous approach , one would have to define different classes for different combinations of properties ; turning a `` member '' into a `` member+customer '' would require different code from turning an `` employee '' into an `` employee+customer '' . The disadvantage of the latter approach is that it would make it harder to guard against redundant or inconsistent attributes ( using something like a Dictionary < Type , ISupplementalInfo > to hold supplemental information could work , but would seem a little `` bulky '' ) .\n\n\nI would tend to favor the second approach , in that it allows for future expansion better than would direct inheritance . Working with a collection of objects rather than a single object might be slightly burdensome , but that approach may be better able than the others to handle changing requirements.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n \r\n edited Nov 26 \'13 at 17:28\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Oct 29 \'12 at 15:36\r\n \r\n \r\n \r\n \r\n \r\n supercat\r\n \r\n 43.5k176112\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Could you please add some simple diagram to represent your solution ? \r\n â€“ Trix\r\n May 30 at 13:55\r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t\r\nNot the answer you 're looking for ? \t\t\t\t\t\t\tBrowse other questions tagged oop class-design or ask your own question.\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t asked\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 8 years ago\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t viewed\r\n\t\t\t \r\n\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 7950 times\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t active\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 2 years ago\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t\t\t\t\r\n\t\t\t\r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk974100860 '' , [ 5,17,2221 ] ) .setZone ( 45 ) ; } ) ; \r\n \r\n \r\n \r\n \r\n ; ( function ( n ) { var u=Object.assign||function ( n ) { for ( var i , r , u , f , e= [ ] , t=1 ; t < arguments.length ; t++ ) e [ t-1 ] =arguments [ t ] ; for ( i=0 , r=e ; i < r.length ; i++ ) { u=r [ i ] ; for ( f in u ) n [ f ] =u [ f ] } return n } , r , t , f , i ; try { if ( typeof [ ] .indexOf ! = '' function '' ) return ; if ( window.attachEvent & & ! window.addEventListener ) return ; if ( r= [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , r [ 0 ] ! == '' * '' & & r.indexOf ( location.hostname ) ===-1 ) return ; t=window ; f=t.clc_opts ? u ( { } , window.clc_opts ) : { } ; t.clc_opts=u ( n , f ) ; void 0 ; t.clc_opts.autoload & & ( t.clc_init=t.clc_init|| [ ] , t.clc_init.push ( function ( ) { return t.clc.load ( ) } ) ) ; i=document.createElement ( `` script '' ) ; i.async= ! 0 ; void 0 ; i.src=t.clc_opts.lib ; document.body.appendChild ( i ) } catch ( e ) { void 0 } } ) .call ( null , { `` azw '' : true , '' kt '' :2000 , '' autoload '' : true , '' tto '' : true , '' d '' : { `` sb '' : [ `` hireme '' , '' clc-sb '' ] , '' tlb '' : [ `` careers1 '' , '' clc-tlb '' ] , '' mlb '' : [ `` careers3 '' , '' clc-mlb '' ] } , '' allowed '' : [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , '' h '' : '' clc.stackoverflow.com '' , '' u '' : '' //clc.stackoverflow.com/p.js '' , '' lib '' : '' //cdn.sstatic.net/clc/clc.min.js ? v=949796768e2b '' } ) ; \r\n \r\nwindow.clcfl_request = \'AuuveLCSINQIAAAAAKSXAAACAAAAAgAAAAASAAAAfG9vcHxjbGFzcy1kZXNpZ258AKMk6e2N0oodhcQ\ ' ; \r\n ; ( function ( n ) { var t , i ; try { if ( typeof [ ] .indexOf ! = '' function '' ) return ; if ( window.attachEvent & & ! window.addEventListener ) return ; if ( n.allowed [ 0 ] ! == '' * '' & & n.allowed.indexOf ( location.hostname ) ===-1 ) return ; t=window ; t.clcfl=t.clcfl|| { } ; t.clcfl_request||void 0 ; t.clcfl.init=t.clcfl.init|| [ ] ; t.clcfl.init.push ( function ( n ) { return n.load ( ) } ) ; t.clcfl.options=n ; i=document.createElement ( `` script '' ) ; i.async= ! 0 ; i.src=n.lib ; document.body.appendChild ( i ) } catch ( r ) { } } ) .call ( null , { `` azw '' : true , '' kt '' :2000 , '' autoload '' : true , '' tto '' : false , '' d '' : { `` sb '' : [ `` hireme '' , '' clc-sb '' ] , '' tlb '' : [ `` careers1 '' , '' clc-tlb '' ] , '' mlb '' : [ `` careers3 '' , '' clc-mlb '' ] } , '' allowed '' : [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , '' h '' : '' clc.stackoverflow.com '' , '' u '' : '' //clc.stackoverflow.com/fl/markup-bg.js '' , '' lib '' : '' //cdn.sstatic.net/clc/fl/clc.min.js ? v=b8405c6e42c0 '' } ) ; \r\n \r\n\t\t\t\r\n \r\n\r\n\r\n StackExchange.ready ( function ( ) { \r\n StackExchange.newsletterAd.init ( ) ; \r\n } ) ; \r\n\r\n\r\n\r\n Get the weekly newsletter ! In it , you 'll get : \r\n \r\n The week 's top questions and answers\r\n Important community announcements\r\n Questions that need answers\r\n \r\n \r\n see an example newsletter\r\n \r\n \r\n\r\nBy subscribing , you agree to the privacy policy and terms of service.\r\n\r\n \r\n\r\n\r\n \r\n\r\n \r\n\tLinked\r\n\t\r\n\r\n\r\n\t\r\n\t\t1086\r\n\t\r\n\tPrefer composition over inheritance ? \r\n\t\t\t\r\n\r\n\r\n\t\t\t\t\r\n\t\t\t\t\tRelated\r\n \r\n 3How would I control this textgame and how would the classes get a better structure to do this ? 173How do you design object oriented projects ? 4How do you go from idea to implementation when designing classes for other developers in other locations ? 2Design classes - OOPS features8Object oriented programming - class design confusion2Is it good to subclass a class only to separate some functional parts ? 130How do I design a class in Python ? 2Class Design ( UML Class Diagram ) 0simple design problem : parent , child ; teacher , student-4Which OO Design is better and why ? \r\n \r\n\t\t\t\t\r\n \r\n\r\n \r\n \r\n Hot Network Questions\r\n \r\n \r\n \r\n \r\n \r\n Why is the American space program launch site based in Florida and not Texas ? \r\n \r\n\r\n \r\n \r\n \r\n Grandfather of Steganography ! \r\n \r\n\r\n \r\n \r\n \r\n Is it legal to mortgage a property twice or more ? \r\n \r\n\r\n \r\n \r\n \r\n Is the exit status of a command implemented by the command or a shell process which executes the command ? \r\n \r\n\r\n \r\n \r\n \r\n Kuznetsov 's Sequence\r\n \r\n\r\n \r\n \r\n \r\n Alien number systems - Is the decimal system special ? \r\n \r\n\r\n \r\n \r\n \r\n What is the purpose of international editions of books sometimes omitting some problems , footnotes , or other content ? \r\n \r\n\r\n \r\n \r\n \r\n What is the origin of D & D 1-9 spell levels ? \r\n \r\n\r\n \r\n \r\n \r\n Add a language to a polyglot\r\n \r\n\r\n \r\n \r\n \r\n What is the most common English term for a person who attempts a coup d'Ã©tat ? \r\n \r\n\r\n \r\n \r\n \r\n Who is the woman in this image ? \r\n \r\n\r\n \r\n \r\n \r\n reverse order in a csv\r\n \r\n\r\n \r\n \r\n \r\n Why are terminal consoles still used ? \r\n \r\n\r\n \r\n \r\n \r\n How do you prevent causal loops from happening with the Novikov self-consistency principle ? \r\n \r\n\r\n \r\n \r\n \r\n Why do mouse cursors never align with actors ' hand movements ( or always move perfectly straight ) ? \r\n \r\n\r\n \r\n \r\n \r\n How to re-trigger `` Windows firewall has blocked ... '' message ? \r\n \r\n\r\n \r\n \r\n \r\n How to handle sexist questions toward a faculty job candidate by other undergraduates ? \r\n \r\n\r\n \r\n \r\n \r\n How should a country introduce a constructed language as the official language ? \r\n \r\n\r\n \r\n \r\n \r\n What is the most possible candidates that could tie for the US President in the Electoral College\r\n \r\n\r\n \r\n \r\n \r\n Sum of Modulo Sums\r\n \r\n\r\n \r\n \r\n \r\n Make me a fake loader\r\n \r\n\r\n \r\n \r\n \r\n How was the cryogenization of Fry not discovered sooner ? \r\n \r\n\r\n \r\n \r\n \r\n Are 550 people still losing their jobs at `` Trump 's '' Carrier plant ? \r\n \r\n\r\n \r\n \r\n \r\n A gift that you give to someone that is actually more a gift to yourself ? \r\n \r\n\r\n \r\n \r\n\r\n \r\n more hot questions\r\n \r\n\r\n\t\t\r\n\t\t\r\nStackExchange.ready ( function ( ) { $ .get ( \'/posts/38820/ivc/95fb\ ' ) ; } ) ; \r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n about us\r\n tour\r\n help\r\n blog\r\n chat\r\n data\r\n legal\r\n privacy policy\r\n work here\r\n advertising info\r\n\r\n mobile\r\n contact us\r\n feedback\r\n \r\n \r\n \r\n \r\n \r\n \r\n Technology\r\n \r\n \r\n Life / Arts\r\n \r\n \r\n Culture / Recreation\r\n \r\n \r\n Science\r\n \r\n \r\n Other\r\n \r\n \r\n \r\n \r\n \r\n Stack Overflow\r\n Server Fault\r\n Super User\r\n Web Applications\r\n Ask Ubuntu\r\n Webmasters\r\n Game Development\r\n TeX - LaTeX\r\n \r\n Software Engineering\r\n Unix & Linux\r\n Ask Different ( Apple ) \r\n WordPress Development\r\n Geographic Information Systems\r\n Electrical Engineering\r\n Android Enthusiasts\r\n Information Security\r\n \r\n Database Administrators\r\n Drupal Answers\r\n SharePoint\r\n User Experience\r\n Mathematica\r\n Salesforce\r\n ExpressionEngineÂ® Answers\r\n Cryptography\r\n \r\n Code Review\r\n Magento\r\n Signal Processing\r\n Raspberry Pi\r\n Programming Puzzles & Code Golf\r\n \r\n \r\n \r\n more ( 7 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n Photography\r\n Science Fiction & Fantasy\r\n Graphic Design\r\n Movies & TV\r\n Music : Practice & Theory\r\n Seasoned Advice ( cooking ) \r\n Home Improvement\r\n Personal Finance & Money\r\n \r\n Academia\r\n \r\n \r\n \r\n more ( 8 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n English Language & Usage\r\n Skeptics\r\n Mi Yodeya ( Judaism ) \r\n Travel\r\n Christianity\r\n English Language Learners\r\n Japanese Language\r\n Arqade ( gaming ) \r\n \r\n Bicycles\r\n Role-playing Games\r\n Anime & Manga\r\n Motor Vehicle Maintenance & Repair\r\n \r\n \r\n \r\n more ( 17 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n MathOverflow\r\n Mathematics\r\n Cross Validated ( stats ) \r\n Theoretical Computer Science\r\n Physics\r\n Chemistry\r\n Biology\r\n Computer Science\r\n \r\n Philosophy\r\n \r\n \r\n \r\n more ( 3 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n Meta Stack Exchange\r\n Stack Apps\r\n Area 51\r\n Stack Overflow Talent\r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n site design / logo Â© 2016 Stack Exchange Inc ; user contributions licensed under cc by-sa 3.0 \r\n with attribution required\r\n \r\n \r\n rev 2016.12.9.4320\r\n \r\n \r\n \r\n \r\n Stack Overflow works best with JavaScript enabled\r\n \r\n\r\nvar p = `` http '' , d = `` static '' ; if ( document.location.protocol == `` https : '' ) { p += `` s '' ; d = `` engine '' ; } var z = document.createElement ( `` script '' ) ; z.type = `` text/javascript '' ; z.async = true ; z.src = p + `` : // '' + d + `` .adzerk.net/ados.js '' ; var s = document.getElementsByTagName ( `` script '' ) [ 0 ] ; s.parentNode.insertBefore ( z , s ) ; \r\n\r\n var ados = ados || { } ; \r\n ados.run = ados.run || [ ] ; \r\n \r\n \r\n \r\n ados.run.push ( function ( ) { \r\n setTimeout ( function ( ) { $ ( `` # adzerk-user-match '' ) .remove ( ) ; } , window.AUMIframeDone ? 0 : 2000 ) ; \r\n ados_setKeywords ( \'oop , class-design\ ' ) ; ; ados_load ( ) ; \r\n } ) ; \r\n \r\n\r\n\r\n \r\n ( function ( i , s , o , g , r , a , m ) { \r\n i [ \'GoogleAnalyticsObject\ ' ] = r ; i [ r ] = i [ r ] || function ( ) { ( i [ r ] .q = i [ r ] .q || [ ] ) .push ( arguments ) } , i [ r ] .l = 1 * new Date ( ) ; a = s.createElement ( o ) , \r\n m = s.getElementsByTagName ( o ) [ 0 ] ; a.async = 1 ; a.src = g ; m.parentNode.insertBefore ( a , m ) ; \r\n } ) ( window , document , \'script\ ' , \'https : //www.google-analytics.com/analytics.js\ ' , \'ga\ ' ) ; \r\n \r\n ga ( \'create\ ' , \'UA-5620270-1\ ' ) ; \r\n \r\n ga ( \'create\ ' , \'UA-5620270-59\ ' , \'auto\ ' , \'pageData\ ' ) ; \r\n \r\n ga ( \'set\ ' , \'dimension2\ ' , \'|oop|class-design|\ ' ) ; ga ( \'pageData.set\ ' , \'dimension2\ ' , \'|oop|class-design|\ ' ) ; ga ( \'send\ ' , \'pageview\ ' ) ; \r\n ga ( \'pageData.send\ ' , \'pageview\ ' ) ; \r\n\r\n var _qevents = _qevents || [ ] , \r\n _comscore = _comscore || [ ] ; \r\n ( function ( ) { \r\n var ssl=\'https : \'==document.location.protocol , \r\n s=document.getElementsByTagName ( \'script\ ' ) [ 0 ] , \r\n qc=document.createElement ( \'script\ ' ) ; \r\n qc.async = true ; \r\n qc.src = ( ssl ? \'https : //secure\ ' : \'http : //edge\ ' ) + \'.quantserve.com/quant.js\ ' ; \r\n s.parentNode.insertBefore ( qc , s ) ; \r\n _qevents.push ( { qacct : `` p-c1rF4kxgLUzNc '' } ) ; \r\n var sc=document.createElement ( \'script\ ' ) ; \r\n sc.async=true ; \r\n sc.src= ( ssl ? \'https : //sb\ ' : \'http : //b\ ' ) + \'.scorecardresearch.com/beacon.js\ ' ; \r\n s.parentNode.insertBefore ( sc , s ) ; \r\n _comscore.push ( { c1 : `` 2 '' , c2 : `` 17440561 '' } ) ; \r\n } ) ( ) ; \r\n\r\n \r\n \r\n \r\n \r\n \r\n ( function ( appendChild ) { \r\n Node.prototype.appendChild = function ( ) { \r\n var parent = this ; \r\n var newNode = arguments [ 0 ] ; \r\n if ( parent.nodeName === \'HEAD\'\r\n & & newNode\r\n & & newNode.nodeName === \'SCRIPT\'\r\n & & newNode.src ) { \r\n \r\n window.setTimeout ( function ( ) { \r\n var result = newNode.src.match ( /^https : \\/\\/maps\\.googleapis\\.com\\/maps\\/api\\/place\\/js\\/ ( \\w+ ) Service\\./i ) || [ ] ; \r\n var service = result [ 1 ] ; \r\n if ( service ) { \r\n if ( service === \'Autocompletion\ ' ) service = 2 ; \r\n else if ( service === \'Place\ ' ) service = 1 ; \r\n else service = 0 ; \r\n StackExchange.using ( \'gps\ ' , function ( ) { \r\n StackExchange.gps.track ( \'google_maps_places_api.call\ ' , { service : service } ) ; \r\n } ) ; \r\n } \r\n } , 0 ) ; \r\n } \r\n return appendChild.apply ( this , arguments ) ; \r\n } ; \r\n } ) ( Node.prototype.appendChild ) ; \r\n \r\n \r\n ' 