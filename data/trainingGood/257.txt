b'\r\n\r\n\r\n\r\n\r\ndata structures - What are some alternatives to a bit array ? - Stack Overflow\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n StackExchange.ready ( function ( ) { \r\n \r\n StackExchange.using ( `` snippets '' , function ( ) { \r\n StackExchange.snippets.initSnippetRenderer ( ) ; \r\n } ) ; \r\n \r\n\r\n StackExchange.using ( `` postValidation '' , function ( ) { \r\n StackExchange.postValidation.initOnBlurAndSubmit ( $ ( \ ' # post-form\ ' ) , 2 , \'answer\ ' ) ; \r\n } ) ; \r\n\r\n \r\n StackExchange.question.init ( { showAnswerHelp : true , totalCommentCount:0 , shownCommentCount:0 , highlightColor : \ ' # F4A83D\ ' , backgroundColor : \ ' # FFF\ ' , questionId:36106 } ) ; \r\n\r\n styleCode ( ) ; \r\n\r\n StackExchange.realtime.subscribeToQuestion ( \'1\ ' , \'36106\ ' ) ; \r\n StackExchange.using ( `` gps '' , function ( ) { StackExchange.gps.trackOutboundClicks ( \ ' # content\ ' , \'.post-text\ ' , true ) ; } ) ; \r\n\r\n } ) ; \r\n \r\n\r\n\r\n \r\n StackExchange.init ( { `` locale '' : '' en '' , '' stackAuthUrl '' : '' https : //stackauth.com '' , '' networkMetaHostname '' : '' meta.stackexchange.com '' , '' serverTime '' :1481469190 , '' routeName '' : '' Questions/Show '' , '' site '' : { `` name '' : '' Stack Overflow '' , '' description '' : '' Q & A for professional and enthusiast programmers '' , '' isNoticesTabEnabled '' : true , '' recaptchaPublicKey '' : '' 6LdchgIAAAAAAJwGpIzRQSOFaO0pU6s44Xt8aTwc '' , '' recaptchaAudioLang '' : '' en '' , '' enableNewTagCreationWarning '' : true , '' insertSpaceAfterNameTabCompletion '' : false , '' id '' :1 , '' enableInsertDocLinkDialog '' : true , '' enableSocialMediaInSharePopup '' : true } , '' user '' : { `` fkey '' : '' 7b1b7f4e1a6b23324556540c1e6d03a0 '' , '' rep '' :0 , '' isAnonymous '' : true , '' isAnonymousNetworkWide '' : true } , '' events '' : { `` postType '' : { `` question '' :1 } , '' postEditionSection '' : { `` title '' :1 , '' body '' :2 , '' tags '' :3 } } , '' story '' : { `` minCompleteBodyLength '' :75 } } , { `` site '' : { `` allowImageUploads '' : true , '' enableUserHovercards '' : true , '' styleCode '' : true , '' enableNewLinkInsertDialog '' : true , '' enableNewHeaderDesign '' : true , '' enableImgurHttps '' : true } , '' comments '' : { } , '' tags '' : { } , '' accounts '' : { `` currentPasswordRequiredForChangingStackIdPassword '' : true } , '' flags '' : { `` allowRetractingFlags '' : true } , '' analytics '' : { `` clientTimingsAbsoluteTimeout '' :30000 , '' clientTimingsDebounceTimeout '' :1000 } , '' snippets '' : { `` snippetsEnabled '' : true , '' renderDomain '' : '' stacksnippets.net '' } , '' markdown '' : { `` asteriskIntraWordEmphasis '' : true } } ) ; \r\n StackExchange.using.setCacheBreakers ( { `` js/prettify-full.en.js '' : '' 06d67193cff4 '' , '' js/moderator.en.js '' : '' 1bdc231dc7f5 '' , '' js/full-anon.en.js '' : '' 49075288bf9b '' , '' js/full.en.js '' : '' 53dd47f49d45 '' , '' js/wmd.en.js '' : '' 1966ce920971 '' , '' js/third-party/jquery.autocomplete.min.js '' : '' e5f01e97f7c3 '' , '' js/third-party/jquery.autocomplete.min.en.js '' : '' '' , '' js/mobile.en.js '' : '' 3c7426a1302d '' , '' js/help.en.js '' : '' 12aebc9f0272 '' , '' js/tageditor.en.js '' : '' 820420283947 '' , '' js/tageditornew.en.js '' : '' 8b70577d4cf5 '' , '' js/inline-tag-editing.en.js '' : '' 2ddfa79492e7 '' , '' js/revisions.en.js '' : '' f4d14ad9db6c '' , '' js/review.en.js '' : '' 45ded0b70a10 '' , '' js/tagsuggestions.en.js '' : '' d1ff9b84abe5 '' , '' js/post-validation.en.js '' : '' 38ab6ae8a4a3 '' , '' js/explore-qlist.en.js '' : '' e71f14781288 '' , '' js/events.en.js '' : '' e449ebf70756 '' , '' js/keyboard-shortcuts.en.js '' : '' 4d22dd1bfd37 '' , '' js/external-editor.en.js '' : '' 5441bf1fb1b5 '' , '' js/external-editor.en.js '' : '' 5441bf1fb1b5 '' , '' js/snippet-javascript.en.js '' : '' 07c320a2d73c '' , '' js/snippet-javascript-codemirror.en.js '' : '' aa028aaeae06 '' } ) ; \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.init ( true ) ; \r\n } ) ; \r\n \r\n \r\n \r\n StackExchange.ready ( function ( ) { \r\n $ ( \ ' # nav-tour\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` aboutpage.click '' , { aboutclick_location : `` headermain '' } , true ) ; \r\n } ) ; \r\n } ) ; \r\n } ) ; \r\n \r\n\r\n\r\n \r\n ( function ( ) { var old = $ .fn.contents ; $ .fn.contents = function ( ) { try { return old.apply ( this , arguments ) ; } catch ( e ) { return $ ( [ ] ) ; } } } ) ( ) \r\n \r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n \r\n \r\n current community\r\n \r\n \r\n \r\n \r\n \r\n \r\n chat\r\n \r\n\r\n\r\n\r\n\r\n \r\n \r\n Stack Overflow\r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n \r\n Meta Stack Overflow\r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\nyour communities \r\n\r\n \r\n \r\n\r\n \r\nSign up or log in to customize your list.\r\n \r\n \r\n\r\n \r\n more stack exchange communities\r\n \r\n company blog\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n Stack Exchange\r\n \r\n\r\n \r\n Inbox\r\n \r\n \r\n \r\n Reputation and Badges\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n \r\n \r\n sign up\r\n log in\r\n\r\n tour\r\n \r\n help\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Tour\r\n \r\n Start here for a quick overview of the site\r\n \r\n \r\n \r\n \r\n \r\n Help Center\r\n \r\n Detailed answers to any questions you might have\r\n \r\n \r\n \r\n \r\n \r\n Meta\r\n \r\n Discuss the workings and policies of this site\r\n \r\n \r\n \r\n \r\n \r\n About Us\r\n \r\n Learn more about Stack Overflow the company\r\n \r\n \r\n \r\n \r\n \r\n Business\r\n \r\n Learn more about hiring developers or posting ads with us\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n StackExchange.ready ( function ( ) { StackExchange.topbar.init ( ) ; } ) ; \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n Stack Overflow\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Questions\r\n \r\n \r\n\r\n \r\n \r\n Jobs\r\n \r\n \r\n \r\n \r\n Documentation\r\n \r\n \r\n \r\n \r\n Tags\r\n \r\n \r\n\r\n \r\n \r\n Users\r\n \r\n \r\n\r\n \r\n \r\n Badges\r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n \r\n Ask Question\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n x Dismiss\r\n \r\n \r\n Join the Stack Overflow Community\r\n \r\n \r\n Stack Overflow is a community of 6.4 million programmers , just like you , helping each other.\r\n \r\nJoin them ; it only takes a minute : \r\n \r\n Sign up\r\n \r\n \r\n\r\n StackExchange.ready ( function ( ) { \r\n\r\n var location = 0 ; \r\n if ( $ ( `` body '' ) .hasClass ( `` questions-page '' ) ) { \r\n location = 1 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` question-page '' ) ) { \r\n location = 1 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` faq-page '' ) ) { \r\n location = 5 ; ; \r\n } else if ( $ ( `` body '' ) .hasClass ( `` home-page '' ) ) { \r\n location = 3 ; ; \r\n } \r\n\r\n $ ( \ ' # tell-me-more\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` hero.action '' , { hero_action_type : \'cta\ ' , location : location } , true ) ; \r\n } ) ; \r\n } ) ; \r\n $ ( \ ' # herobox # close\ ' ) .click ( function ( ) { \r\n StackExchange.using ( `` gps '' , function ( ) { \r\n StackExchange.gps.track ( `` hero.action '' , { hero_action_type : `` minimize '' , location : location } , true ) ; \r\n } ) ; \r\n $ .cookie ( `` hero '' , `` mini '' , { path : `` / '' , expires : 365 } ) ; \r\n $ .ajax ( { \r\n url : `` /hero-mini '' , \r\n success : function ( data ) { \r\n $ ( `` # herobox '' ) .fadeOut ( `` fast '' , function ( ) { \r\n $ ( `` # herobox '' ) .replaceWith ( data ) ; \r\n $ ( `` # herobox-mini '' ) .fadeIn ( `` fast '' ) ; \r\n } ) ; \r\n } \r\n } ) ; \r\n return false ; \r\n } ) ; \r\n } ) ; \r\n\r\n\t\t\t\r\n What are some alternatives to a bit array ? \r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n \r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk840841234 '' ,4 ) .setZone ( 43 ) ; } ) ; \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 8\r\n down vote\r\n\r\n favorite\r\n 5\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n \r\n\r\nI have an information retrieval application that creates bit arrays on the order of 10s of million bits . The number of `` set '' bits in the array varies widely , from all clear to all set . Currently , I\ 'm using a straight-forward bit array ( java.util.BitSet ) , so each of my bit arrays takes several megabytes.\n\nMy plan is to look at the cardinality of the first N bits , then make a decision about what data structure to use for the remainder . Clearly some data structures are better for very sparse bit arrays , and others when roughly half the bits are set ( when most bits are set , I can use negation to treat it as a sparse set of zeroes ) . \n\n\nWhat structures might be good at each extreme ? \nAre there any in the middle ? \n\n\nHere are a few constraints or hints : \n\n\nThe bits are set only once , and in index order.\nI need 100 % accuracy , so something like a Bloom filter isn\'t good enough.\nAfter the set is built , I need to be able to efficiently iterate over the `` set '' bits.\nThe bits are randomly distributed , so run-length–encoding algorithms aren\'t likely to be much better than a simple list of bit indexes.\nI\ 'm trying to optimize memory utilization , but speed still carries some weight.\n\n\nSomething with an open source Java implementation is helpful , but not strictly necessary . I\ 'm more interested in the fundamentals.\n \r\n \r\n data-structures information-retrieval \r\n \r\n \r\n \r\n \r\nshare|improve this question \r\n \r\n \r\n\r\n \r\n edited Aug 30 \'08 at 18:35\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n asked Aug 30 \'08 at 16:39\r\n \r\n \r\n \r\n \r\n \r\n erickson\r\n \r\n 184k33273393\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n\t\t\t\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t7 Answers\r\n 7\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n \r\n active\r\n \r\n oldest\r\n \r\n votes\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t \r\n\t\t\t\t \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 16\r\n down vote\r\n\r\n\r\n\r\n accepted\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nUnless the data is truly random and has a symmetric 1/0 distribution , then this simply becomes a lossless data compression problem and is very analogous to CCITT Group 3 compression used for black and white ( i.e . : Binary ) FAX images . CCITT Group 3 uses a Huffman Coding scheme . In the case of FAX they are using a fixed set of Huffman codes , but for a given data set , you can generate a specific set of codes for each data set to improve the compression ratio achieved . As long as you only need to access the bits sequentially , as you implied , this will be a pretty efficient approach . Random access would create some additional challenges , but you could probably generate a binary search tree index to various offset points in the array that would allow you to get close to the desired location and then walk in from there.\n\nNote : The Huffman scheme still works well even if the data is random , as long as the 1/0 distribution is not perfectly even . That is , the less even the distribution , the better the compression ratio.\n\nFinally , if the bits are truly random with an even distribution , then , well , according to Mr. Claude Shannon , you are not going to be able to compress it any significant amount using any scheme.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n \r\n edited Oct 2 \'14 at 23:06\r\n \r\n \r\n \r\n \r\n \r\n Jason Sundram\r\n \r\n 4,72594976\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 30 \'08 at 20:05\r\n \r\n \r\n \r\n \r\n \r\n Tall Jeff♦\r\n \r\n 7,24053455\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Beautiful solution . It might even be fast as well since memory loads are so costly today.\r\n – I GIVE CRAP ANSWERS\r\n Oct 5 \'08 at 15:16\r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk2065238185 '' ,4 ) .setZone ( 44 ) ; } ) ; \r\n \r\n \r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 4\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nI would strongly consider using range encoding in place of Huffman coding . In general , range encoding can exploit asymmetry more effectively than Huffman coding , but this is especially so when the alphabet size is so small . In fact , when the `` native alphabet '' is simply 0s and 1s , the only way Huffman can get any compression at all is by combining those symbols -- which is exactly what range encoding will do , more effectively.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Sep 18 \'08 at 1:06\r\n \r\n \r\n \r\n \r\n \r\n Antaeus Feldspar\r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Thanks Antaeus , I had actually looked into range coding already , as the accepted answer cited Huffman coding as just one example of lossless compression . However , Huffman is easy to implement and works well on moderately asymmetric input . For highly asymmetric input , run-length methods are good.\r\n – erickson\r\n Sep 18 \'08 at 5:02\r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 2\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nMaybe too late for you , but there is a very fast and memory efficient library for sparse bit arrays ( lossless ) and other data types based on tries . Look at Judy arrays\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Jun 17 \'09 at 17:16\r\n \r\n \r\n \r\n \r\n \r\n bill\r\n \r\n 95789\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Thanks Bill . I remember hearing about Judy arrays before but I had completely forgotten about them . I will take another look at them.\r\n – erickson\r\n Jun 17 \'09 at 18:03\r\n \r\n \r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nThanks for the answers . This is what I\ 'm going to try for dynamically choosing the right method : \n\nI\ 'll collect all of the first N hits in a conventional bit array , and choose one of three methods , based on the symmetry of this sample.\n\n\nIf the sample is highly asymmetric , \nI\ 'll simply store the indexes to the\nset bits ( or maybe the distance to \nthe next bit ) in a list . \nIf the sample is highly symmetric , \nI\ 'll keep using a conventional bit\narray.\nIf the sample is moderately\nsymmetric , I\ 'll use a lossless\ncompression method like Huffman\ncoding suggested by\nInSciTekJeff.\n\n\nThe boundaries between the asymmetric , moderate , and symmetric regions will depend on the time required by the various algorithms balanced against the space they need , where the relative value of time versus space would be an adjustable parameter . The space needed for Huffman coding is a function of the symmetry , and I\ 'll profile that with testing . Also , I\ 'll test all three methods to determine the time requirements of my implementation.\n\nIt\ 's possible ( and actually I\ 'm hoping ) that the middle compression method will always be better than the list or the bit array or both . Maybe I can encourage this by choosing a set of Huffman codes adapted for higher or lower symmetry . Then I can simplify the system and just use two methods.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 31 \'08 at 16:23\r\n \r\n \r\n \r\n \r\n \r\n erickson\r\n \r\n 184k33273393\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 1\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nOne more compression thought : \n\nIf the bit array is not crazy long , you could try applying the Burrows-Wheeler transform before using any repetition encoding , such as Huffman . A naive implementation would take O ( n^2 ) memory during ( de ) compression and O ( n^2 log n ) time to decompress - there are almost certainly shortcuts to be had , as well . But if there\ 's any sequential structure to your data at all , this should really help the Huffman encoding out.\n\nYou could also apply that idea to one block at a time to keep the time/memory usage more practical . Using one block at time could allow you to always keep most of the data structure compressed if you\ 're reading/writing sequentially.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 31 \'08 at 21:23\r\n \r\n \r\n \r\n \r\n \r\n Tyler\r\n \r\n 22k96696\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 0\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nStraight forward lossless compression is the way to go . To make it searchable you will have to compress relatively small blocks and create an index into an array of the blocks . This index can contain the bit offset of the starting bit in each block.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 31 \'08 at 9:58\r\n \r\n \r\n \r\n \r\n \r\n Tim Ring\r\n \r\n 1,1361323\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n\r\n \r\n up vote\r\n 0\r\n down vote\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\nQuick combinatoric proof that you can\'t really save much space : \n\nSuppose you have an arbitrary subset of n/2 bits set to 1 out of n total bits . You have ( n choose n/2 ) possibilities . Using Stirling\ 's formula , this is roughly 2^n / sqrt ( n ) * sqrt ( 2/pi ) . If every possibility is equally likely , then there\ 's no way to give more likely choices shorter representations . So we need log_2 ( n choose n/2 ) bits , which is about n - ( 1/2 ) log ( n ) bits.\n\nThat\ 's not a very good savings of memory . For example , if you\ 're working with n=2^20 ( 1 meg ) , then you can only save about 10 bits . It\ 's just not worth it.\n\nHaving said all that , it also seems very unlikely that any really useful data is truly random . In case there\ 's any more structure to your data , there\ 's probably a more optimistic answer.\n \r\n \r\n \r\n \r\nshare|improve this answer \r\n \r\n\r\n\r\n \r\n \r\n\r\n \r\n \r\n answered Aug 31 \'08 at 11:16\r\n \r\n \r\n \r\n \r\n \r\n Tyler\r\n \r\n 22k96696\r\n \r\n \r\n\r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n \r\n\t \r\n\t\t \r\n \r\n\r\n \r\n \r\n\t\t \r\n\t \r\n\r\n \r\n\r\n add a comment | \r\n \r\n \r\n \r\n \r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t \r\n \r\n \r\n\t\t\t\t\t\t\tYour Answer\r\n\r\n\r\n \r\n StackExchange.ifUsing ( `` editor '' , function ( ) { \r\n StackExchange.using ( `` externalEditor '' , function ( ) { \r\n StackExchange.using ( `` snippets '' , function ( ) { \r\n StackExchange.snippets.init ( ) ; \r\n } ) ; \r\n } ) ; \r\n } , `` code-snippets '' ) ; \r\n \r\n \r\n\r\n\r\n StackExchange.ready ( function ( ) { \r\n initTagRenderer ( `` '' .split ( `` `` ) , `` '' .split ( `` `` ) ) ; \r\n \r\n StackExchange.using ( `` externalEditor '' , function ( ) { \r\n // Have to fire editor after snippets , if snippets enabled\r\n if ( StackExchange.settings.snippets.snippetsEnabled ) { \r\n StackExchange.using ( `` snippets '' , function ( ) { \r\n createEditor ( ) ; \r\n } ) ; \r\n } \r\n else { \r\n createEditor ( ) ; \r\n } \r\n } ) ; \r\n\r\n function createEditor ( ) { \r\n prepareEditor ( { \r\n heartbeatType : \'answer\ ' , \r\n convertImagesToLinks : true , \r\n reputationToPostImages : 10 , \r\n bindNavPrevention : true , \r\n postfix : `` '' , \r\n onDemand : true , \r\n discardSelector : `` .discard-answer '' \r\n , immediatelyShowMarkdownHelp : true\r\n } ) ; \r\n \r\n\r\n } \r\n } ) ; \r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n draft saved\r\n\r\n draft discarded\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t \r\n \r\n \r\n \r\n Sign up or log in\r\n \r\n StackExchange.ready ( function ( ) { \r\n StackExchange.helpers.onClickDraftSave ( \ ' # login-link\ ' ) ; \r\n } ) ; \r\n \r\n \r\n Sign up using Google\r\n \r\n \r\n Sign up using Facebook\r\n \r\n \r\n Sign up using Email and Password\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n Post as a guest\r\n \r\n \r\n \r\n \r\n \r\n Name\r\n \r\n \r\n \r\n Email\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n \r\n StackExchange.ready ( \r\n function ( ) { \r\n StackExchange.openid.initPostLogin ( \'.new-post-login\ ' , \'http % 3a % 2f % 2fstackoverflow.com % 2fquestions % 2f36106 % 2fwhat-are-some-alternatives-to-a-bit-array % 23new-answer\ ' , \'question_page\ ' ) ; \r\n } \r\n ) ; \r\n \r\n \r\n Post as a guest\r\n \r\n \r\n \r\n \r\n \r\n Name\r\n \r\n \r\n \r\n Email\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n\r\n\t\t\t\t\t\t\t\r\n \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdiscard\r\n\r\n\r\nBy posting your answer , you agree to the privacy policy and terms of service.\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t\t\t\t\r\nNot the answer you 're looking for ? \t\t\t\t\t\t\tBrowse other questions tagged data-structures information-retrieval or ask your own question.\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t asked\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 8 years ago\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t viewed\r\n\t\t\t \r\n\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 2993 times\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t active\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t 2 years ago\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t\t\t\t\r\n\t\t\t\r\n var ados = ados || { } ; ados.run = ados.run || [ ] ; \r\n ados.run.push ( function ( ) { ados_add_placement ( 22,8277 , '' adzerk528029739 '' , [ 5,17,2221 ] ) .setZone ( 45 ) ; } ) ; \r\n \r\n \r\n \r\n \r\n ; ( function ( n ) { var u=Object.assign||function ( n ) { for ( var i , r , u , f , e= [ ] , t=1 ; t < arguments.length ; t++ ) e [ t-1 ] =arguments [ t ] ; for ( i=0 , r=e ; i < r.length ; i++ ) { u=r [ i ] ; for ( f in u ) n [ f ] =u [ f ] } return n } , r , t , f , i ; try { if ( typeof [ ] .indexOf ! = '' function '' ) return ; if ( window.attachEvent & & ! window.addEventListener ) return ; if ( r= [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , r [ 0 ] ! == '' * '' & & r.indexOf ( location.hostname ) ===-1 ) return ; t=window ; f=t.clc_opts ? u ( { } , window.clc_opts ) : { } ; t.clc_opts=u ( n , f ) ; void 0 ; t.clc_opts.autoload & & ( t.clc_init=t.clc_init|| [ ] , t.clc_init.push ( function ( ) { return t.clc.load ( ) } ) ) ; i=document.createElement ( `` script '' ) ; i.async= ! 0 ; void 0 ; i.src=t.clc_opts.lib ; document.body.appendChild ( i ) } catch ( e ) { void 0 } } ) .call ( null , { `` azw '' : true , '' kt '' :2000 , '' autoload '' : true , '' tto '' : true , '' d '' : { `` sb '' : [ `` hireme '' , '' clc-sb '' ] , '' tlb '' : [ `` careers1 '' , '' clc-tlb '' ] , '' mlb '' : [ `` careers3 '' , '' clc-mlb '' ] } , '' allowed '' : [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , '' h '' : '' clc.stackoverflow.com '' , '' u '' : '' //clc.stackoverflow.com/p.js '' , '' lib '' : '' //cdn.sstatic.net/clc/clc.min.js ? v=949796768e2b '' } ) ; \r\n \r\nwindow.clcfl_request = \'Am38azjYIdQIAAAAAAqNAAACAAAAAgAAAAAnAAAAfGRhdGEtc3RydWN0dXJlc3xpbmZvcm1hdGlvbi1yZXRyaWV2YWx8ALH5V1WCvIg7_Ms\ ' ; \r\n ; ( function ( n ) { var t , i ; try { if ( typeof [ ] .indexOf ! = '' function '' ) return ; if ( window.attachEvent & & ! window.addEventListener ) return ; if ( n.allowed [ 0 ] ! == '' * '' & & n.allowed.indexOf ( location.hostname ) ===-1 ) return ; t=window ; t.clcfl=t.clcfl|| { } ; t.clcfl_request||void 0 ; t.clcfl.init=t.clcfl.init|| [ ] ; t.clcfl.init.push ( function ( n ) { return n.load ( ) } ) ; t.clcfl.options=n ; i=document.createElement ( `` script '' ) ; i.async= ! 0 ; i.src=n.lib ; document.body.appendChild ( i ) } catch ( r ) { } } ) .call ( null , { `` azw '' : true , '' kt '' :2000 , '' autoload '' : true , '' tto '' : false , '' d '' : { `` sb '' : [ `` hireme '' , '' clc-sb '' ] , '' tlb '' : [ `` careers1 '' , '' clc-tlb '' ] , '' mlb '' : [ `` careers3 '' , '' clc-mlb '' ] } , '' allowed '' : [ `` stackoverflow.com '' , '' serverfault.com '' , '' careers.stackoverflow.com '' , '' blog.codinghorror.com '' , '' joelonsoftware.com '' , '' www.joelonsoftware.com '' , '' talent.stackoverflow.com '' ] , '' h '' : '' clc.stackoverflow.com '' , '' u '' : '' //clc.stackoverflow.com/fl/markup-bg.js '' , '' lib '' : '' //cdn.sstatic.net/clc/fl/clc.min.js ? v=b8405c6e42c0 '' } ) ; \r\n \r\n\t\t\t\r\n\r\n \r\n\tLinked\r\n\t\r\n\r\n\r\n\t\r\n\t\t12\r\n\t\r\n\tRepresenting sparse integer sets ? \r\n\t\t\t\r\n\r\n\r\n\t\t\t\t\r\n\t\t\t\t\tRelated\r\n \r\n 797What are the lesser known but useful data structures ? 124What is the best way to compute trending topics or tags ? 7What are some good methods to find the “relatedness” of two bodies of text ? 0What is a programming language which is appropriate with data classification project0Retrieve some info from the web automatically1besides BM25 , whats other ranking functions exists ? 2What is the best language for information retrieval ? 2What is a good representation for a searchable bit matrix with fixed number of columns ? -1What do the codes on Walmart price labels represent ( “VEN” , “AR” , “AS” , “WR” , etc ) ? 1what is the similarity function and how is the query transformed with spread activation techniques\r\n \r\n\t\t\t\t\r\n \r\n\r\n \r\n \r\n Hot Network Questions\r\n \r\n \r\n \r\n \r\n \r\n How to draw this special matrix with two diagonal braces ? \r\n \r\n\r\n \r\n \r\n \r\n How did Jews feels in the Confederate States of America and what was their political position ? \r\n \r\n\r\n \r\n \r\n \r\n `` Subterranean '' , but for planets/surfaces other than Earth\r\n \r\n\r\n \r\n \r\n \r\n Kuznetsov 's Sequence\r\n \r\n\r\n \r\n \r\n \r\n What plumbing did well-equipped sailing ships have ? \r\n \r\n\r\n \r\n \r\n \r\n Sum of Modulo Sums\r\n \r\n\r\n \r\n \r\n \r\n Why do mouse cursors never align with actors ' hand movements ( or always move perfectly straight ) ? \r\n \r\n\r\n \r\n \r\n \r\n Want to return name of last defined variable without explicitly naming it\r\n \r\n\r\n \r\n \r\n \r\n Why are p-values often higher in a Cox proportional hazard model than in logistic regression ? \r\n \r\n\r\n \r\n \r\n \r\n What algorithm did Microsoft use to dither colour in early versions of Windows ? \r\n \r\n\r\n \r\n \r\n \r\n Using _ ( underscore ) variable with arrow functions in ES6/Typescript\r\n \r\n\r\n \r\n \r\n \r\n A Single Sentence Puzzle\r\n \r\n\r\n \r\n \r\n \r\n What does a person in a light-bending invisibility cloak look like from behind ? \r\n \r\n\r\n \r\n \r\n \r\n Counterexample about UFD\r\n \r\n\r\n \r\n \r\n \r\n How was the cryogenization of Fry not discovered sooner ? \r\n \r\n\r\n \r\n \r\n \r\n How do you get users to think aloud ? \r\n \r\n\r\n \r\n \r\n \r\n I cry easily when confronted or chastised . How will this affect my professional career ? \r\n \r\n\r\n \r\n \r\n \r\n Recycling bicycles\r\n \r\n\r\n \r\n \r\n \r\n Most useful knowledge from the 30 's to understand current state of computers & networking ? \r\n \r\n\r\n \r\n \r\n \r\n Why would a fire dragon still be afraid of torches ? \r\n \r\n\r\n \r\n \r\n \r\n What are the five most powerful characters in your language ? \r\n \r\n\r\n \r\n \r\n \r\n Sudoers blacklist\r\n \r\n\r\n \r\n \r\n \r\n Generate n-ary numbers\r\n \r\n\r\n \r\n \r\n \r\n Why do 1 pF capacitors exist ? \r\n \r\n\r\n \r\n \r\n\r\n \r\n more hot questions\r\n \r\n\r\n\t\t\r\n\t\r\n\r\n \r\n \r\n question feed\r\n \r\n \r\n\t\r\nStackExchange.ready ( function ( ) { $ .get ( \'/posts/36106/ivc/aa68\ ' ) ; } ) ; \r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n about us\r\n tour\r\n help\r\n blog\r\n chat\r\n data\r\n legal\r\n privacy policy\r\n work here\r\n advertising info\r\n\r\n mobile\r\n contact us\r\n feedback\r\n \r\n \r\n \r\n \r\n \r\n \r\n Technology\r\n \r\n \r\n Life / Arts\r\n \r\n \r\n Culture / Recreation\r\n \r\n \r\n Science\r\n \r\n \r\n Other\r\n \r\n \r\n \r\n \r\n \r\n Stack Overflow\r\n Server Fault\r\n Super User\r\n Web Applications\r\n Ask Ubuntu\r\n Webmasters\r\n Game Development\r\n TeX - LaTeX\r\n \r\n Software Engineering\r\n Unix & Linux\r\n Ask Different ( Apple ) \r\n WordPress Development\r\n Geographic Information Systems\r\n Electrical Engineering\r\n Android Enthusiasts\r\n Information Security\r\n \r\n Database Administrators\r\n Drupal Answers\r\n SharePoint\r\n User Experience\r\n Mathematica\r\n Salesforce\r\n ExpressionEngine® Answers\r\n Cryptography\r\n \r\n Code Review\r\n Magento\r\n Signal Processing\r\n Raspberry Pi\r\n Programming Puzzles & Code Golf\r\n \r\n \r\n \r\n more ( 7 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n Photography\r\n Science Fiction & Fantasy\r\n Graphic Design\r\n Movies & TV\r\n Music : Practice & Theory\r\n Seasoned Advice ( cooking ) \r\n Home Improvement\r\n Personal Finance & Money\r\n \r\n Academia\r\n \r\n \r\n \r\n more ( 8 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n English Language & Usage\r\n Skeptics\r\n Mi Yodeya ( Judaism ) \r\n Travel\r\n Christianity\r\n English Language Learners\r\n Japanese Language\r\n Arqade ( gaming ) \r\n \r\n Bicycles\r\n Role-playing Games\r\n Anime & Manga\r\n Motor Vehicle Maintenance & Repair\r\n \r\n \r\n \r\n more ( 17 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n MathOverflow\r\n Mathematics\r\n Cross Validated ( stats ) \r\n Theoretical Computer Science\r\n Physics\r\n Chemistry\r\n Biology\r\n Computer Science\r\n \r\n Philosophy\r\n \r\n \r\n \r\n more ( 3 ) \r\n \r\n \r\n \r\n \r\n \r\n \r\n Meta Stack Exchange\r\n Stack Apps\r\n Area 51\r\n Stack Overflow Talent\r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n \r\n site design / logo © 2016 Stack Exchange Inc ; user contributions licensed under cc by-sa 3.0 \r\n with attribution required\r\n \r\n \r\n rev 2016.12.9.4320\r\n \r\n \r\n \r\n \r\n Stack Overflow works best with JavaScript enabled\r\n \r\n\r\nvar p = `` http '' , d = `` static '' ; if ( document.location.protocol == `` https : '' ) { p += `` s '' ; d = `` engine '' ; } var z = document.createElement ( `` script '' ) ; z.type = `` text/javascript '' ; z.async = true ; z.src = p + `` : // '' + d + `` .adzerk.net/ados.js '' ; var s = document.getElementsByTagName ( `` script '' ) [ 0 ] ; s.parentNode.insertBefore ( z , s ) ; \r\n\r\n var ados = ados || { } ; \r\n ados.run = ados.run || [ ] ; \r\n \r\n \r\n \r\n ados.run.push ( function ( ) { \r\n setTimeout ( function ( ) { $ ( `` # adzerk-user-match '' ) .remove ( ) ; } , window.AUMIframeDone ? 0 : 2000 ) ; \r\n ados_setKeywords ( \'data-structures , information-retrieval\ ' ) ; ; ados_load ( ) ; \r\n } ) ; \r\n \r\n\r\n\r\n \r\n ( function ( i , s , o , g , r , a , m ) { \r\n i [ \'GoogleAnalyticsObject\ ' ] = r ; i [ r ] = i [ r ] || function ( ) { ( i [ r ] .q = i [ r ] .q || [ ] ) .push ( arguments ) } , i [ r ] .l = 1 * new Date ( ) ; a = s.createElement ( o ) , \r\n m = s.getElementsByTagName ( o ) [ 0 ] ; a.async = 1 ; a.src = g ; m.parentNode.insertBefore ( a , m ) ; \r\n } ) ( window , document , \'script\ ' , \'https : //www.google-analytics.com/analytics.js\ ' , \'ga\ ' ) ; \r\n \r\n ga ( \'create\ ' , \'UA-5620270-1\ ' ) ; \r\n \r\n ga ( \'create\ ' , \'UA-5620270-59\ ' , \'auto\ ' , \'pageData\ ' ) ; \r\n \r\n ga ( \'set\ ' , \'dimension2\ ' , \'|data-structures|information-retrieval|\ ' ) ; ga ( \'pageData.set\ ' , \'dimension2\ ' , \'|data-structures|information-retrieval|\ ' ) ; ga ( \'send\ ' , \'pageview\ ' ) ; \r\n ga ( \'pageData.send\ ' , \'pageview\ ' ) ; \r\n\r\n var _qevents = _qevents || [ ] , \r\n _comscore = _comscore || [ ] ; \r\n ( function ( ) { \r\n var ssl=\'https : \'==document.location.protocol , \r\n s=document.getElementsByTagName ( \'script\ ' ) [ 0 ] , \r\n qc=document.createElement ( \'script\ ' ) ; \r\n qc.async = true ; \r\n qc.src = ( ssl ? \'https : //secure\ ' : \'http : //edge\ ' ) + \'.quantserve.com/quant.js\ ' ; \r\n s.parentNode.insertBefore ( qc , s ) ; \r\n _qevents.push ( { qacct : `` p-c1rF4kxgLUzNc '' } ) ; \r\n var sc=document.createElement ( \'script\ ' ) ; \r\n sc.async=true ; \r\n sc.src= ( ssl ? \'https : //sb\ ' : \'http : //b\ ' ) + \'.scorecardresearch.com/beacon.js\ ' ; \r\n s.parentNode.insertBefore ( sc , s ) ; \r\n _comscore.push ( { c1 : `` 2 '' , c2 : `` 17440561 '' } ) ; \r\n } ) ( ) ; \r\n\r\n \r\n \r\n \r\n \r\n \r\n ( function ( appendChild ) { \r\n Node.prototype.appendChild = function ( ) { \r\n var parent = this ; \r\n var newNode = arguments [ 0 ] ; \r\n if ( parent.nodeName === \'HEAD\'\r\n & & newNode\r\n & & newNode.nodeName === \'SCRIPT\'\r\n & & newNode.src ) { \r\n \r\n window.setTimeout ( function ( ) { \r\n var result = newNode.src.match ( /^https : \\/\\/maps\\.googleapis\\.com\\/maps\\/api\\/place\\/js\\/ ( \\w+ ) Service\\./i ) || [ ] ; \r\n var service = result [ 1 ] ; \r\n if ( service ) { \r\n if ( service === \'Autocompletion\ ' ) service = 2 ; \r\n else if ( service === \'Place\ ' ) service = 1 ; \r\n else service = 0 ; \r\n StackExchange.using ( \'gps\ ' , function ( ) { \r\n StackExchange.gps.track ( \'google_maps_places_api.call\ ' , { service : service } ) ; \r\n } ) ; \r\n } \r\n } , 0 ) ; \r\n } \r\n return appendChild.apply ( this , arguments ) ; \r\n } ; \r\n } ) ( Node.prototype.appendChild ) ; \r\n \r\n \r\n ' 