b'\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\n  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n\n\n<html xmlns="http://www.w3.org/1999/xhtml">\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n    \n  \n    <title>Classification of text documents using sparse features &#8212; scikit-learn 0.18.1 documentation</title>\n  <!-- htmltitle is before nature.css - we use this hack to load bootstrap first -->\n  <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  <link rel="stylesheet" href="../../_static/css/bootstrap.min.css" media="screen" />\n  <link rel="stylesheet" href="../../_static/css/bootstrap-responsive.css"/>\n\n    \n    <link rel="stylesheet" href="../../_static/nature.css" type="text/css" />\n    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />\n    <link rel="stylesheet" href="../../_static/gallery.css" type="text/css" />\n    <link rel="stylesheet" href="../../_static/gallery.css" type="text/css" />\n    \n    <script type="text/javascript">\n      var DOCUMENTATION_OPTIONS = {\n        URL_ROOT:    \'../../\',\n        VERSION:     \'0.18.1\',\n        COLLAPSE_INDEX: false,\n        FILE_SUFFIX: \'.html\',\n        HAS_SOURCE:  true\n      };\n    </script>\n    <script type="text/javascript" src="../../_static/jquery.js"></script>\n    <script type="text/javascript" src="../../_static/underscore.js"></script>\n    <script type="text/javascript" src="../../_static/doctools.js"></script>\n    <script type="text/javascript" src="../../_static/js/copybutton.js"></script>\n    <link rel="shortcut icon" href="../../_static/favicon.ico"/>\n    <link rel="author" title="About these documents" href="../../about.html" />\n    <link rel="search" title="Search" href="../../search.html" />\n    <link rel="top" title="scikit-learn 0.18.1 documentation" href="../../index.html" />\n    <link rel="up" title="General examples" href="../index.html" />\n    <link rel="next" title="Decision Tree Regression" href="../tree/plot_tree_regression.html" />\n    <link rel="prev" title="Clustering text documents using k-means" href="document_clustering.html" />\n  \n  \n  <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  <script src="../../_static/js/bootstrap.min.js" type="text/javascript"></script>\n  <link rel="canonical" href="http://scikit-learn.org/stable/auto_examples/text/document_classification_20newsgroups.html" />\n\n  <script type="text/javascript">\n    $("div.buttonNext, div.buttonPrevious").hover(\n       function () {\n           $(this).css(\'background-color\', \'#FF9C34\');\n       },\n       function () {\n           $(this).css(\'background-color\', \'#A7D6E2\');\n       }\n    );\n    function showMenu() {\n      var topNav = document.getElementById("scikit-navbar");\n      if (topNav.className === "navbar") {\n          topNav.className += " responsive";\n      } else {\n          topNav.className = "navbar";\n      }\n    };\n  </script>\n\n  </head>\n  <body role="document">\n\n<div class="header-wrapper">\n    <div class="header">\n        <p class="logo"><a href="../../index.html">\n            <img src="../../_static/scikit-learn-logo-small.png" alt="Logo"/>\n        </a>\n        </p><div class="navbar" id="scikit-navbar">\n            <ul>\n                <li><a href="../../index.html">Home</a></li>\n                <li><a href="../../install.html">Installation</a></li>\n                <li class="btn-li"><div class="btn-group">\n              <a href="../../documentation.html">Documentation</a>\n              <a class="btn dropdown-toggle" data-toggle="dropdown">\n                 <span class="caret"></span>\n              </a>\n              <ul class="dropdown-menu">\n            <li class="link-title">Scikit-learn 0.18 (stable)</li>\n            <li><a href="../../tutorial/index.html">Tutorials</a></li>\n            <li><a href="../../user_guide.html">User guide</a></li>\n            <li><a href="../../modules/classes.html">API</a></li>\n            <li><a href="../../faq.html">FAQ</a></li>\n            <li><a href="../../developers/contributing.html">Contributing</a></li>\n            <li class="divider"></li>\n                <li><a href="http://scikit-learn.org/dev/documentation.html">Scikit-learn 0.19-dev (development)</a></li>\n                <li><a href="http://scikit-learn.org/0.17/documentation.html">Scikit-learn 0.17</a></li>\n                <li><a href="http://scikit-learn.org/0.16/documentation.html">Scikit-learn 0.16</a></li>\n                <li><a href="http://scikit-learn.org/0.15/documentation.html">Scikit-learn 0.15</a></li>\n\t\t\t\t<li><a href="../../_downloads/scikit-learn-docs.pdf">PDF documentation</a></li>\n              </ul>\n            </div>\n        </li>\n            <li><a href="../index.html">Examples</a></li>\n            </ul>\n            <a href="javascript:void(0);" onclick="showMenu()">\n                <div class="nav-icon">\n                    <div class="hamburger-line"></div>\n                    <div class="hamburger-line"></div>\n                    <div class="hamburger-line"></div>\n                </div>\n            </a>\n            <div class="search_form">\n                <div id="cse" style="width: 100%;"></div>\n            </div>\n        </div> <!-- end navbar --></div>\n</div>\n\n\n<!-- Github "fork me" ribbon -->\n<a href="https://github.com/scikit-learn/scikit-learn">\n  <img class="fork-me"\n       style="position: absolute; top: 0; right: 0; border: 0;"\n       src="../../_static/img/forkme.png"\n       alt="Fork me on GitHub" />\n</a>\n\n<div class="content-wrapper">\n    <div class="sphinxsidebar">\n    <div class="sphinxsidebarwrapper">\n        <div class="rel">\n    \n        <div class="rellink">\n        <a href="document_clustering.html"\n        accesskey="P">Previous\n        <br/>\n        <span class="smallrellink">\n        Clustering te...\n        </span>\n            <span class="hiddenrellink">\n            Clustering text documents using k-means\n            </span>\n        </a>\n        </div>\n            <div class="spacer">\n            &nbsp;\n            </div>\n        <div class="rellink">\n        <a href="../tree/plot_tree_regression.html"\n        accesskey="N">Next\n        <br/>\n        <span class="smallrellink">\n        Decision Tree...\n        </span>\n            <span class="hiddenrellink">\n            Decision Tree Regression\n            </span>\n        </a>\n        </div>\n\n    <!-- Ad a link to the \'up\' page -->\n        <div class="spacer">\n        &nbsp;\n        </div>\n        <div class="rellink">\n        <a href="../index.html">\n        Up\n        <br/>\n        <span class="smallrellink">\n        General examples\n        </span>\n            <span class="hiddenrellink">\n            General examples\n            </span>\n            \n        </a>\n        </div>\n    </div>\n    \n      <p class="doc-version">This documentation is for scikit-learn <strong>version 0.18.1</strong> &mdash; <a href="http://scikit-learn.org/stable/support.html#documentation-resources">Other versions</a></p>\n    <p class="citing">If you use the software, please consider <a href="../../about.html#citing-scikit-learn">citing scikit-learn</a>.</p>\n    <ul>\n<li><a class="reference internal" href="#">Classification of text documents using sparse features</a></li>\n</ul>\n\n    </div>\n</div>\n\n<input type="checkbox" id="nav-trigger" class="nav-trigger" checked />\n<label for="nav-trigger"></label>\n\n\n\n\n      <div class="content">\n            \n      <div class="documentwrapper">\n        <div class="bodywrapper">\n          <div class="body" role="main">\n            \n  <div class="section" id="classification-of-text-documents-using-sparse-features">\n<span id="sphx-glr-auto-examples-text-document-classification-20newsgroups-py"></span><h1>Classification of text documents using sparse features<a class="headerlink" href="#classification-of-text-documents-using-sparse-features" title="Permalink to this headline">\xc2\xb6</a></h1>\n<p>This is an example showing how scikit-learn can be used to classify documents\nby topics using a bag-of-words approach. This example uses a scipy.sparse\nmatrix to store the features and demonstrates various classifiers that can\nefficiently handle sparse matrices.</p>\n<p>The dataset used in this example is the 20 newsgroups dataset. It will be\nautomatically downloaded, then cached.</p>\n<p>The bar plot indicates the accuracy, training time (normalized) and test time\n(normalized) of each classifier.</p>\n<div class="highlight-python"><div class="highlight"><pre><span></span><span class="c1"># Author: Peter Prettenhofer &lt;peter.prettenhofer@gmail.com&gt;</span>\n<span class="c1">#         Olivier Grisel &lt;olivier.grisel@ensta.org&gt;</span>\n<span class="c1">#         Mathieu Blondel &lt;mathieu@mblondel.org&gt;</span>\n<span class="c1">#         Lars Buitinck</span>\n<span class="c1"># License: BSD 3 clause</span>\n\n<span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">print_function</span>\n\n<span class="kn">import</span> <span class="nn">logging</span>\n<span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>\n<span class="kn">from</span> <span class="nn">optparse</span> <span class="kn">import</span> <span class="n">OptionParser</span>\n<span class="kn">import</span> <span class="nn">sys</span>\n<span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">time</span>\n<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="kn">as</span> <span class="nn">plt</span>\n\n<span class="kn">from</span> <span class="nn">sklearn.datasets</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.datasets.fetch_20newsgroups.html#sklearn.datasets.fetch_20newsgroups"><span class="n">fetch_20newsgroups</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer"><span class="n">TfidfVectorizer</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.feature_extraction.text.HashingVectorizer.html#sklearn.feature_extraction.text.HashingVectorizer"><span class="n">HashingVectorizer</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.feature_selection</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.feature_selection.SelectKBest.html#sklearn.feature_selection.SelectKBest"><span class="n">SelectKBest</span></a><span class="p">,</span> <a href="../../modules/generated/sklearn.feature_selection.chi2.html#sklearn.feature_selection.chi2"><span class="n">chi2</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.linear_model.RidgeClassifier.html#sklearn.linear_model.RidgeClassifier"><span class="n">RidgeClassifier</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.pipeline</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.pipeline.Pipeline.html#sklearn.pipeline.Pipeline"><span class="n">Pipeline</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.svm</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC"><span class="n">LinearSVC</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.linear_model.SGDClassifier.html#sklearn.linear_model.SGDClassifier"><span class="n">SGDClassifier</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.linear_model.Perceptron.html#sklearn.linear_model.Perceptron"><span class="n">Perceptron</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.linear_model.PassiveAggressiveClassifier.html#sklearn.linear_model.PassiveAggressiveClassifier"><span class="n">PassiveAggressiveClassifier</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.naive_bayes</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB"><span class="n">BernoulliNB</span></a><span class="p">,</span> <a href="../../modules/generated/sklearn.naive_bayes.MultinomialNB.html#sklearn.naive_bayes.MultinomialNB"><span class="n">MultinomialNB</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.neighbors</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeighborsClassifier"><span class="n">KNeighborsClassifier</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.neighbors</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.neighbors.NearestCentroid.html#sklearn.neighbors.NearestCentroid"><span class="n">NearestCentroid</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.ensemble</span> <span class="kn">import</span> <a href="../../modules/generated/sklearn.ensemble.RandomForestClassifier.html#sklearn.ensemble.RandomForestClassifier"><span class="n">RandomForestClassifier</span></a>\n<span class="kn">from</span> <span class="nn">sklearn.utils.extmath</span> <span class="kn">import</span> <span class="n">density</span>\n<span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">metrics</span>\n\n\n<span class="c1"># Display progress logs on stdout</span>\n<span class="n">logging</span><span class="o">.</span><span class="n">basicConfig</span><span class="p">(</span><span class="n">level</span><span class="o">=</span><span class="n">logging</span><span class="o">.</span><span class="n">INFO</span><span class="p">,</span>\n                    <span class="n">format</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">%(asctime)s</span><span class="s1"> </span><span class="si">%(levelname)s</span><span class="s1"> </span><span class="si">%(message)s</span><span class="s1">&#39;</span><span class="p">)</span>\n\n\n<span class="c1"># parse commandline arguments</span>\n<span class="n">op</span> <span class="o">=</span> <span class="n">OptionParser</span><span class="p">()</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--report&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store_true&quot;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s2">&quot;print_report&quot;</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Print a detailed classification report.&quot;</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--chi2_select&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store&quot;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;int&quot;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s2">&quot;select_chi2&quot;</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Select some number of features using a chi-squared test&quot;</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--confusion_matrix&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store_true&quot;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s2">&quot;print_cm&quot;</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Print the confusion matrix.&quot;</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--top10&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store_true&quot;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s2">&quot;print_top10&quot;</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Print ten most discriminative terms per class&quot;</span>\n                   <span class="s2">&quot; for every classifier.&quot;</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--all_categories&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store_true&quot;</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s2">&quot;all_categories&quot;</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Whether to use all categories or not.&quot;</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--use_hashing&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store_true&quot;</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Use a hashing vectorizer.&quot;</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--n_features&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store&quot;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">2</span> <span class="o">**</span> <span class="mi">16</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;n_features when using the hashing vectorizer.&quot;</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s2">&quot;--filtered&quot;</span><span class="p">,</span>\n              <span class="n">action</span><span class="o">=</span><span class="s2">&quot;store_true&quot;</span><span class="p">,</span>\n              <span class="n">help</span><span class="o">=</span><span class="s2">&quot;Remove newsgroup information that is easily overfit: &quot;</span>\n                   <span class="s2">&quot;headers, signatures, and quoting.&quot;</span><span class="p">)</span>\n\n<span class="p">(</span><span class="n">opts</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="o">=</span> <span class="n">op</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>\n<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>\n    <span class="n">op</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s2">&quot;this script takes no arguments.&quot;</span><span class="p">)</span>\n    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>\n\n<span class="k">print</span><span class="p">(</span><span class="n">__doc__</span><span class="p">)</span>\n<span class="n">op</span><span class="o">.</span><span class="n">print_help</span><span class="p">()</span>\n<span class="k">print</span><span class="p">()</span>\n</pre></div>\n</div>\n<p>Load some categories from the training set</p>\n<div class="highlight-python"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">all_categories</span><span class="p">:</span>\n    <span class="n">categories</span> <span class="o">=</span> <span class="bp">None</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="n">categories</span> <span class="o">=</span> <span class="p">[</span>\n        <span class="s1">&#39;alt.atheism&#39;</span><span class="p">,</span>\n        <span class="s1">&#39;talk.religion.misc&#39;</span><span class="p">,</span>\n        <span class="s1">&#39;comp.graphics&#39;</span><span class="p">,</span>\n        <span class="s1">&#39;sci.space&#39;</span><span class="p">,</span>\n    <span class="p">]</span>\n\n<span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">filtered</span><span class="p">:</span>\n    <span class="n">remove</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;headers&#39;</span><span class="p">,</span> <span class="s1">&#39;footers&#39;</span><span class="p">,</span> <span class="s1">&#39;quotes&#39;</span><span class="p">)</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="n">remove</span> <span class="o">=</span> <span class="p">()</span>\n\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;Loading 20 newsgroups dataset for categories:&quot;</span><span class="p">)</span>\n<span class="k">print</span><span class="p">(</span><span class="n">categories</span> <span class="k">if</span> <span class="n">categories</span> <span class="k">else</span> <span class="s2">&quot;all&quot;</span><span class="p">)</span>\n\n<span class="n">data_train</span> <span class="o">=</span> <a href="../../modules/generated/sklearn.datasets.fetch_20newsgroups.html#sklearn.datasets.fetch_20newsgroups"><span class="n">fetch_20newsgroups</span></a><span class="p">(</span><span class="n">subset</span><span class="o">=</span><span class="s1">&#39;train&#39;</span><span class="p">,</span> <span class="n">categories</span><span class="o">=</span><span class="n">categories</span><span class="p">,</span>\n                                <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span>\n                                <span class="n">remove</span><span class="o">=</span><span class="n">remove</span><span class="p">)</span>\n\n<span class="n">data_test</span> <span class="o">=</span> <a href="../../modules/generated/sklearn.datasets.fetch_20newsgroups.html#sklearn.datasets.fetch_20newsgroups"><span class="n">fetch_20newsgroups</span></a><span class="p">(</span><span class="n">subset</span><span class="o">=</span><span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="n">categories</span><span class="o">=</span><span class="n">categories</span><span class="p">,</span>\n                               <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span>\n                               <span class="n">remove</span><span class="o">=</span><span class="n">remove</span><span class="p">)</span>\n<span class="k">print</span><span class="p">(</span><span class="s1">&#39;data loaded&#39;</span><span class="p">)</span>\n\n<span class="c1"># order of labels in `target_names` can be different from `categories`</span>\n<span class="n">target_names</span> <span class="o">=</span> <span class="n">data_train</span><span class="o">.</span><span class="n">target_names</span>\n\n\n<span class="k">def</span> <span class="nf">size_mb</span><span class="p">(</span><span class="n">docs</span><span class="p">):</span>\n    <span class="k">return</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">))</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">docs</span><span class="p">)</span> <span class="o">/</span> <span class="mf">1e6</span>\n\n<span class="n">data_train_size_mb</span> <span class="o">=</span> <span class="n">size_mb</span><span class="p">(</span><span class="n">data_train</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>\n<span class="n">data_test_size_mb</span> <span class="o">=</span> <span class="n">size_mb</span><span class="p">(</span><span class="n">data_test</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>\n\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%d</span><span class="s2"> documents - </span><span class="si">%0.3f</span><span class="s2">MB (training set)&quot;</span> <span class="o">%</span> <span class="p">(</span>\n    <span class="nb">len</span><span class="p">(</span><span class="n">data_train</span><span class="o">.</span><span class="n">data</span><span class="p">),</span> <span class="n">data_train_size_mb</span><span class="p">))</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%d</span><span class="s2"> documents - </span><span class="si">%0.3f</span><span class="s2">MB (test set)&quot;</span> <span class="o">%</span> <span class="p">(</span>\n    <span class="nb">len</span><span class="p">(</span><span class="n">data_test</span><span class="o">.</span><span class="n">data</span><span class="p">),</span> <span class="n">data_test_size_mb</span><span class="p">))</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%d</span><span class="s2"> categories&quot;</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="n">categories</span><span class="p">))</span>\n<span class="k">print</span><span class="p">()</span>\n\n<span class="c1"># split a training set and a test set</span>\n<span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">data_train</span><span class="o">.</span><span class="n">target</span><span class="p">,</span> <span class="n">data_test</span><span class="o">.</span><span class="n">target</span>\n\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;Extracting features from the training data using a sparse vectorizer&quot;</span><span class="p">)</span>\n<span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>\n<span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">use_hashing</span><span class="p">:</span>\n    <span class="n">vectorizer</span> <span class="o">=</span> <a href="../../modules/generated/sklearn.feature_extraction.text.HashingVectorizer.html#sklearn.feature_extraction.text.HashingVectorizer"><span class="n">HashingVectorizer</span></a><span class="p">(</span><span class="n">stop_words</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">,</span> <span class="n">non_negative</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>\n                                   <span class="n">n_features</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">n_features</span><span class="p">)</span>\n    <span class="n">X_train</span> <span class="o">=</span> <span class="n">vectorizer</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">data_train</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="n">vectorizer</span> <span class="o">=</span> <a href="../../modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer"><span class="n">TfidfVectorizer</span></a><span class="p">(</span><span class="n">sublinear_tf</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">max_df</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>\n                                 <span class="n">stop_words</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>\n    <span class="n">X_train</span> <span class="o">=</span> <span class="n">vectorizer</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">data_train</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>\n<span class="n">duration</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;done in </span><span class="si">%f</span><span class="s2">s at </span><span class="si">%0.3f</span><span class="s2">MB/s&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">duration</span><span class="p">,</span> <span class="n">data_train_size_mb</span> <span class="o">/</span> <span class="n">duration</span><span class="p">))</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;n_samples: </span><span class="si">%d</span><span class="s2">, n_features: </span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">X_train</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>\n<span class="k">print</span><span class="p">()</span>\n\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;Extracting features from the test data using the same vectorizer&quot;</span><span class="p">)</span>\n<span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>\n<span class="n">X_test</span> <span class="o">=</span> <span class="n">vectorizer</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">data_test</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>\n<span class="n">duration</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;done in </span><span class="si">%f</span><span class="s2">s at </span><span class="si">%0.3f</span><span class="s2">MB/s&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">duration</span><span class="p">,</span> <span class="n">data_test_size_mb</span> <span class="o">/</span> <span class="n">duration</span><span class="p">))</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;n_samples: </span><span class="si">%d</span><span class="s2">, n_features: </span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">X_test</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>\n<span class="k">print</span><span class="p">()</span>\n\n<span class="c1"># mapping from integer feature name to original token string</span>\n<span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">use_hashing</span><span class="p">:</span>\n    <span class="n">feature_names</span> <span class="o">=</span> <span class="bp">None</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="n">feature_names</span> <span class="o">=</span> <span class="n">vectorizer</span><span class="o">.</span><span class="n">get_feature_names</span><span class="p">()</span>\n\n<span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">select_chi2</span><span class="p">:</span>\n    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Extracting </span><span class="si">%d</span><span class="s2"> best features by a chi-squared test&quot;</span> <span class="o">%</span>\n          <span class="n">opts</span><span class="o">.</span><span class="n">select_chi2</span><span class="p">)</span>\n    <span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>\n    <span class="n">ch2</span> <span class="o">=</span> <a href="../../modules/generated/sklearn.feature_selection.SelectKBest.html#sklearn.feature_selection.SelectKBest"><span class="n">SelectKBest</span></a><span class="p">(</span><a href="../../modules/generated/sklearn.feature_selection.chi2.html#sklearn.feature_selection.chi2"><span class="n">chi2</span></a><span class="p">,</span> <span class="n">k</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">select_chi2</span><span class="p">)</span>\n    <span class="n">X_train</span> <span class="o">=</span> <span class="n">ch2</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>\n    <span class="n">X_test</span> <span class="o">=</span> <span class="n">ch2</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>\n    <span class="k">if</span> <span class="n">feature_names</span><span class="p">:</span>\n        <span class="c1"># keep selected feature names</span>\n        <span class="n">feature_names</span> <span class="o">=</span> <span class="p">[</span><span class="n">feature_names</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span>\n                         <span class="ow">in</span> <span class="n">ch2</span><span class="o">.</span><span class="n">get_support</span><span class="p">(</span><span class="n">indices</span><span class="o">=</span><span class="bp">True</span><span class="p">)]</span>\n    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;done in </span><span class="si">%f</span><span class="s2">s&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span><span class="p">))</span>\n    <span class="k">print</span><span class="p">()</span>\n\n<span class="k">if</span> <span class="n">feature_names</span><span class="p">:</span>\n    <span class="n">feature_names</span> <span class="o">=</span> <a href="http://docs.scipy.org/doc/numpy-1.6.0/reference/generated/numpy.asarray.html#numpy.asarray"><span class="n">np</span><span class="o">.</span><span class="n">asarray</span></a><span class="p">(</span><span class="n">feature_names</span><span class="p">)</span>\n\n\n<span class="k">def</span> <span class="nf">trim</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>\n    <span class="sd">&quot;&quot;&quot;Trim string to fit on terminal (assuming 80-column display)&quot;&quot;&quot;</span>\n    <span class="k">return</span> <span class="n">s</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">80</span> <span class="k">else</span> <span class="n">s</span><span class="p">[:</span><span class="mi">77</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&quot;...&quot;</span>\n</pre></div>\n</div>\n<p>Benchmark classifiers</p>\n<div class="highlight-python"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">benchmark</span><span class="p">(</span><span class="n">clf</span><span class="p">):</span>\n    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;_&#39;</span> <span class="o">*</span> <span class="mi">80</span><span class="p">)</span>\n    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Training: &quot;</span><span class="p">)</span>\n    <span class="k">print</span><span class="p">(</span><span class="n">clf</span><span class="p">)</span>\n    <span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>\n    <span class="n">clf</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>\n    <span class="n">train_time</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span>\n    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;train time: </span><span class="si">%0.3f</span><span class="s2">s&quot;</span> <span class="o">%</span> <span class="n">train_time</span><span class="p">)</span>\n\n    <span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>\n    <span class="n">pred</span> <span class="o">=</span> <span class="n">clf</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>\n    <span class="n">test_time</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span>\n    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;test time:  </span><span class="si">%0.3f</span><span class="s2">s&quot;</span> <span class="o">%</span> <span class="n">test_time</span><span class="p">)</span>\n\n    <span class="n">score</span> <span class="o">=</span> <a href="../../modules/generated/sklearn.metrics.accuracy_score.html#sklearn.metrics.accuracy_score"><span class="n">metrics</span><span class="o">.</span><span class="n">accuracy_score</span></a><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">pred</span><span class="p">)</span>\n    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;accuracy:   </span><span class="si">%0.3f</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">score</span><span class="p">)</span>\n\n    <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">clf</span><span class="p">,</span> <span class="s1">&#39;coef_&#39;</span><span class="p">):</span>\n        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;dimensionality: </span><span class="si">%d</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">clf</span><span class="o">.</span><span class="n">coef_</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>\n        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;density: </span><span class="si">%f</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">density</span><span class="p">(</span><span class="n">clf</span><span class="o">.</span><span class="n">coef_</span><span class="p">))</span>\n\n        <span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">print_top10</span> <span class="ow">and</span> <span class="n">feature_names</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>\n            <span class="k">print</span><span class="p">(</span><span class="s2">&quot;top 10 keywords per class:&quot;</span><span class="p">)</span>\n            <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">label</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">target_names</span><span class="p">):</span>\n                <span class="n">top10</span> <span class="o">=</span> <a href="http://docs.scipy.org/doc/numpy-1.6.0/reference/generated/numpy.argsort.html#numpy.argsort"><span class="n">np</span><span class="o">.</span><span class="n">argsort</span></a><span class="p">(</span><span class="n">clf</span><span class="o">.</span><span class="n">coef_</span><span class="p">[</span><span class="n">i</span><span class="p">])[</span><span class="o">-</span><span class="mi">10</span><span class="p">:]</span>\n                <span class="k">print</span><span class="p">(</span><span class="n">trim</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2">: </span><span class="si">%s</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">label</span><span class="p">,</span> <span class="s2">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">feature_names</span><span class="p">[</span><span class="n">top10</span><span class="p">]))))</span>\n        <span class="k">print</span><span class="p">()</span>\n\n    <span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">print_report</span><span class="p">:</span>\n        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;classification report:&quot;</span><span class="p">)</span>\n        <span class="k">print</span><span class="p">(</span><span class="n">metrics</span><span class="o">.</span><span class="n">classification_report</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">pred</span><span class="p">,</span>\n                                            <span class="n">target_names</span><span class="o">=</span><span class="n">target_names</span><span class="p">))</span>\n\n    <span class="k">if</span> <span class="n">opts</span><span class="o">.</span><span class="n">print_cm</span><span class="p">:</span>\n        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;confusion matrix:&quot;</span><span class="p">)</span>\n        <span class="k">print</span><span class="p">(</span><a href="../../modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix"><span class="n">metrics</span><span class="o">.</span><span class="n">confusion_matrix</span></a><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">pred</span><span class="p">))</span>\n\n    <span class="k">print</span><span class="p">()</span>\n    <span class="n">clf_descr</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">clf</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;(&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>\n    <span class="k">return</span> <span class="n">clf_descr</span><span class="p">,</span> <span class="n">score</span><span class="p">,</span> <span class="n">train_time</span><span class="p">,</span> <span class="n">test_time</span>\n\n\n<span class="n">results</span> <span class="o">=</span> <span class="p">[]</span>\n<span class="k">for</span> <span class="n">clf</span><span class="p">,</span> <span class="n">name</span> <span class="ow">in</span> <span class="p">(</span>\n        <span class="p">(</span><a href="../../modules/generated/sklearn.linear_model.RidgeClassifier.html#sklearn.linear_model.RidgeClassifier"><span class="n">RidgeClassifier</span></a><span class="p">(</span><span class="n">tol</span><span class="o">=</span><span class="mf">1e-2</span><span class="p">,</span> <span class="n">solver</span><span class="o">=</span><span class="s2">&quot;lsqr&quot;</span><span class="p">),</span> <span class="s2">&quot;Ridge Classifier&quot;</span><span class="p">),</span>\n        <span class="p">(</span><a href="../../modules/generated/sklearn.linear_model.Perceptron.html#sklearn.linear_model.Perceptron"><span class="n">Perceptron</span></a><span class="p">(</span><span class="n">n_iter</span><span class="o">=</span><span class="mi">50</span><span class="p">),</span> <span class="s2">&quot;Perceptron&quot;</span><span class="p">),</span>\n        <span class="p">(</span><a href="../../modules/generated/sklearn.linear_model.PassiveAggressiveClassifier.html#sklearn.linear_model.PassiveAggressiveClassifier"><span class="n">PassiveAggressiveClassifier</span></a><span class="p">(</span><span class="n">n_iter</span><span class="o">=</span><span class="mi">50</span><span class="p">),</span> <span class="s2">&quot;Passive-Aggressive&quot;</span><span class="p">),</span>\n        <span class="p">(</span><a href="../../modules/generated/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeighborsClassifier"><span class="n">KNeighborsClassifier</span></a><span class="p">(</span><span class="n">n_neighbors</span><span class="o">=</span><span class="mi">10</span><span class="p">),</span> <span class="s2">&quot;kNN&quot;</span><span class="p">),</span>\n        <span class="p">(</span><a href="../../modules/generated/sklearn.ensemble.RandomForestClassifier.html#sklearn.ensemble.RandomForestClassifier"><span class="n">RandomForestClassifier</span></a><span class="p">(</span><span class="n">n_estimators</span><span class="o">=</span><span class="mi">100</span><span class="p">),</span> <span class="s2">&quot;Random forest&quot;</span><span class="p">)):</span>\n    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;=&#39;</span> <span class="o">*</span> <span class="mi">80</span><span class="p">)</span>\n    <span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>\n    <span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><span class="n">clf</span><span class="p">))</span>\n\n<span class="k">for</span> <span class="n">penalty</span> <span class="ow">in</span> <span class="p">[</span><span class="s2">&quot;l2&quot;</span><span class="p">,</span> <span class="s2">&quot;l1&quot;</span><span class="p">]:</span>\n    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;=&#39;</span> <span class="o">*</span> <span class="mi">80</span><span class="p">)</span>\n    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">%s</span><span class="s2"> penalty&quot;</span> <span class="o">%</span> <span class="n">penalty</span><span class="o">.</span><span class="n">upper</span><span class="p">())</span>\n    <span class="c1"># Train Liblinear model</span>\n    <span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><a href="../../modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC"><span class="n">LinearSVC</span></a><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="s1">&#39;l2&#39;</span><span class="p">,</span> <span class="n">penalty</span><span class="o">=</span><span class="n">penalty</span><span class="p">,</span>\n                                            <span class="n">dual</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">1e-3</span><span class="p">)))</span>\n\n    <span class="c1"># Train SGD model</span>\n    <span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><a href="../../modules/generated/sklearn.linear_model.SGDClassifier.html#sklearn.linear_model.SGDClassifier"><span class="n">SGDClassifier</span></a><span class="p">(</span><span class="n">alpha</span><span class="o">=.</span><span class="mo">0001</span><span class="p">,</span> <span class="n">n_iter</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span>\n                                           <span class="n">penalty</span><span class="o">=</span><span class="n">penalty</span><span class="p">)))</span>\n\n<span class="c1"># Train SGD with Elastic Net penalty</span>\n<span class="k">print</span><span class="p">(</span><span class="s1">&#39;=&#39;</span> <span class="o">*</span> <span class="mi">80</span><span class="p">)</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;Elastic-Net penalty&quot;</span><span class="p">)</span>\n<span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><a href="../../modules/generated/sklearn.linear_model.SGDClassifier.html#sklearn.linear_model.SGDClassifier"><span class="n">SGDClassifier</span></a><span class="p">(</span><span class="n">alpha</span><span class="o">=.</span><span class="mo">0001</span><span class="p">,</span> <span class="n">n_iter</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span>\n                                       <span class="n">penalty</span><span class="o">=</span><span class="s2">&quot;elasticnet&quot;</span><span class="p">)))</span>\n\n<span class="c1"># Train NearestCentroid without threshold</span>\n<span class="k">print</span><span class="p">(</span><span class="s1">&#39;=&#39;</span> <span class="o">*</span> <span class="mi">80</span><span class="p">)</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;NearestCentroid (aka Rocchio classifier)&quot;</span><span class="p">)</span>\n<span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><a href="../../modules/generated/sklearn.neighbors.NearestCentroid.html#sklearn.neighbors.NearestCentroid"><span class="n">NearestCentroid</span></a><span class="p">()))</span>\n\n<span class="c1"># Train sparse Naive Bayes classifiers</span>\n<span class="k">print</span><span class="p">(</span><span class="s1">&#39;=&#39;</span> <span class="o">*</span> <span class="mi">80</span><span class="p">)</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;Naive Bayes&quot;</span><span class="p">)</span>\n<span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><a href="../../modules/generated/sklearn.naive_bayes.MultinomialNB.html#sklearn.naive_bayes.MultinomialNB"><span class="n">MultinomialNB</span></a><span class="p">(</span><span class="n">alpha</span><span class="o">=.</span><span class="mo">01</span><span class="p">)))</span>\n<span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><a href="../../modules/generated/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB"><span class="n">BernoulliNB</span></a><span class="p">(</span><span class="n">alpha</span><span class="o">=.</span><span class="mo">01</span><span class="p">)))</span>\n\n<span class="k">print</span><span class="p">(</span><span class="s1">&#39;=&#39;</span> <span class="o">*</span> <span class="mi">80</span><span class="p">)</span>\n<span class="k">print</span><span class="p">(</span><span class="s2">&quot;LinearSVC with L1-based feature selection&quot;</span><span class="p">)</span>\n<span class="c1"># The smaller C, the stronger the regularization.</span>\n<span class="c1"># The more regularization, the more sparsity.</span>\n<span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">benchmark</span><span class="p">(</span><a href="../../modules/generated/sklearn.pipeline.Pipeline.html#sklearn.pipeline.Pipeline"><span class="n">Pipeline</span></a><span class="p">([</span>\n  <span class="p">(</span><span class="s1">&#39;feature_selection&#39;</span><span class="p">,</span> <a href="../../modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC"><span class="n">LinearSVC</span></a><span class="p">(</span><span class="n">penalty</span><span class="o">=</span><span class="s2">&quot;l1&quot;</span><span class="p">,</span> <span class="n">dual</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">1e-3</span><span class="p">)),</span>\n  <span class="p">(</span><span class="s1">&#39;classification&#39;</span><span class="p">,</span> <a href="../../modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC"><span class="n">LinearSVC</span></a><span class="p">())</span>\n<span class="p">])))</span>\n\n<span class="c1"># make some plots</span>\n\n<span class="n">indices</span> <span class="o">=</span> <a href="http://docs.scipy.org/doc/numpy-1.6.0/reference/generated/numpy.arange.html#numpy.arange"><span class="n">np</span><span class="o">.</span><span class="n">arange</span></a><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">results</span><span class="p">))</span>\n\n<span class="n">results</span> <span class="o">=</span> <span class="p">[[</span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">results</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">)]</span>\n\n<span class="n">clf_names</span><span class="p">,</span> <span class="n">score</span><span class="p">,</span> <span class="n">training_time</span><span class="p">,</span> <span class="n">test_time</span> <span class="o">=</span> <span class="n">results</span>\n<span class="n">training_time</span> <span class="o">=</span> <a href="http://docs.scipy.org/doc/numpy-1.6.0/reference/generated/numpy.array.html#numpy.array"><span class="n">np</span><span class="o">.</span><span class="n">array</span></a><span class="p">(</span><span class="n">training_time</span><span class="p">)</span> <span class="o">/</span> <span class="n">np</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="n">training_time</span><span class="p">)</span>\n<span class="n">test_time</span> <span class="o">=</span> <a href="http://docs.scipy.org/doc/numpy-1.6.0/reference/generated/numpy.array.html#numpy.array"><span class="n">np</span><span class="o">.</span><span class="n">array</span></a><span class="p">(</span><span class="n">test_time</span><span class="p">)</span> <span class="o">/</span> <span class="n">np</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="n">test_time</span><span class="p">)</span>\n\n<a href="http://matplotlib.org/api/figure_api.html#matplotlib.figure"><span class="n">plt</span><span class="o">.</span><span class="n">figure</span></a><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.title"><span class="n">plt</span><span class="o">.</span><span class="n">title</span></a><span class="p">(</span><span class="s2">&quot;Score&quot;</span><span class="p">)</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.barh"><span class="n">plt</span><span class="o">.</span><span class="n">barh</span></a><span class="p">(</span><span class="n">indices</span><span class="p">,</span> <span class="n">score</span><span class="p">,</span> <span class="o">.</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s2">&quot;score&quot;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;navy&#39;</span><span class="p">)</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.barh"><span class="n">plt</span><span class="o">.</span><span class="n">barh</span></a><span class="p">(</span><span class="n">indices</span> <span class="o">+</span> <span class="o">.</span><span class="mi">3</span><span class="p">,</span> <span class="n">training_time</span><span class="p">,</span> <span class="o">.</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s2">&quot;training time&quot;</span><span class="p">,</span>\n         <span class="n">color</span><span class="o">=</span><span class="s1">&#39;c&#39;</span><span class="p">)</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.barh"><span class="n">plt</span><span class="o">.</span><span class="n">barh</span></a><span class="p">(</span><span class="n">indices</span> <span class="o">+</span> <span class="o">.</span><span class="mi">6</span><span class="p">,</span> <span class="n">test_time</span><span class="p">,</span> <span class="o">.</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s2">&quot;test time&quot;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;darkorange&#39;</span><span class="p">)</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.yticks"><span class="n">plt</span><span class="o">.</span><span class="n">yticks</span></a><span class="p">(())</span>\n<a href="http://matplotlib.org/api/legend_api.html#matplotlib.legend"><span class="n">plt</span><span class="o">.</span><span class="n">legend</span></a><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;best&#39;</span><span class="p">)</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.subplots_adjust"><span class="n">plt</span><span class="o">.</span><span class="n">subplots_adjust</span></a><span class="p">(</span><span class="n">left</span><span class="o">=.</span><span class="mi">25</span><span class="p">)</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.subplots_adjust"><span class="n">plt</span><span class="o">.</span><span class="n">subplots_adjust</span></a><span class="p">(</span><span class="n">top</span><span class="o">=.</span><span class="mi">95</span><span class="p">)</span>\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.subplots_adjust"><span class="n">plt</span><span class="o">.</span><span class="n">subplots_adjust</span></a><span class="p">(</span><span class="n">bottom</span><span class="o">=.</span><span class="mo">05</span><span class="p">)</span>\n\n<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">indices</span><span class="p">,</span> <span class="n">clf_names</span><span class="p">):</span>\n    <a href="http://matplotlib.org/api/text_api.html#matplotlib.text"><span class="n">plt</span><span class="o">.</span><span class="n">text</span></a><span class="p">(</span><span class="o">-.</span><span class="mi">3</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>\n\n<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.show"><span class="n">plt</span><span class="o">.</span><span class="n">show</span></a><span class="p">()</span>\n</pre></div>\n</div>\n<p><strong>Total running time of the script:</strong>\n(0 minutes 0.000 seconds)</p>\n<div class="sphx-glr-download container">\n<strong>Download Python source code:</strong> <a class="reference download internal" href="../../_downloads/document_classification_20newsgroups.py" download=""><code class="xref download docutils literal"><span class="pre">document_classification_20newsgroups.py</span></code></a></div>\n<div class="sphx-glr-download container">\n<strong>Download IPython notebook:</strong> <a class="reference download internal" href="../../_downloads/document_classification_20newsgroups.ipynb" download=""><code class="xref download docutils literal"><span class="pre">document_classification_20newsgroups.ipynb</span></code></a></div>\n</div>\n\n\n          </div>\n        </div>\n      </div>\n        <div class="clearer"></div>\n      </div>\n    </div>\n\n    <div class="footer">\n        &copy; 2010 - 2016, scikit-learn developers (BSD License).\n      <a href="../../_sources/auto_examples/text/document_classification_20newsgroups.txt" rel="nofollow">Show this page source</a>\n    </div>\n     <div class="rel">\n    \n    <div class="buttonPrevious">\n      <a href="document_clustering.html">Previous\n      </a>\n    </div>\n    <div class="buttonNext">\n      <a href="../tree/plot_tree_regression.html">Next\n      </a>\n    </div>\n    \n     </div>\n\n    \n    <script type="text/javascript">\n      var _gaq = _gaq || [];\n      _gaq.push([\'_setAccount\', \'UA-22606712-2\']);\n      _gaq.push([\'_trackPageview\']);\n\n      (function() {\n        var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\n        ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\n        var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n      })();\n    </script>\n    \n\n    <script src="http://www.google.com/jsapi" type="text/javascript"></script>\n    <script type="text/javascript"> google.load(\'search\', \'1\',\n        {language : \'en\'}); google.setOnLoadCallback(function() {\n            var customSearchControl = new\n            google.search.CustomSearchControl(\'016639176250731907682:tjtqbvtvij0\');\n            customSearchControl.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);\n            var options = new google.search.DrawOptions();\n            options.setAutoComplete(true);\n            customSearchControl.draw(\'cse\', options); }, true);\n    </script>\n  </body>\n</html>'