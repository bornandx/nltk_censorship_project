b'\n\n\t\n\t\tWebsite Log In\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t\t\t\n\t\t\n\t\t\n\t\tlabel { \n\t\t\tdisplay : block ; \n\t\t\tpadding-left : 15px ; \n\t\t\ttext-indent : -15px ; \n\t\t\tmargin-bottom : 10px ; \n\t\t } \n\n\t\tlabel input { \n\t\t\twidth : 13px ; \n\t\t\theight : 13px ; \n\t\t\tpadding : 0 ; \n\t\t\tmargin:0 ; \n\t\t\tvertical-align : bottom ; \n\t\t\tposition : relative ; \n\t\t\ttop : -1px ; \n\t\t\t*overflow : hidden ; \n\t\t } \n\n\t\tinput.shaded-input-large { \n\t\t\twidth : 443px ; \n\t\t } \n\t\t\n\n\t\t\n\n\n\n\n\t\t\n\n\n\n\n\n\n\n\t\t\n\t\tfunction showLoginErrors ( ) \n\t\t { \n\t\t\tvar getData = new Array ( ) ; \n\t\t\tgetData = initializeGetData ( ) ; \n\n\t\t\tvar maintenanceTime = \'\ ' ; \n\t\t\tif ( getData [ \'maintenance\ ' ] ) { \n\t\t\t\tmaintenanceTime = getData [ \'maintenance\ ' ] .escapeHTML ( ) ; \n\t\t\t } \n\n\t\t\tvar errorTypes = [ \n\t\t\t\t { \'name\ ' : \'login\ ' , \'message\ ' : _W.utl ( \'html.content.client_login_template_9\ ' ) , \'target\ ' : \'login-area\ ' } , \n\t\t\t\t { \'name\ ' : \'denied\ ' , \'message\ ' : _W.utl ( \'html.content.client_login_template_10\ ' ) , \'target\ ' : \'login-area\ ' } , \n\t\t\t\t { \'name\ ' : \'session-expired\ ' , \'message\ ' : _W.utl ( \'html.content.client_login_template_3\ ' ) , \'target\ ' : \'login-area\ ' } , \n\t\t\t\t { \'name\ ' : \'login-error\ ' , \'message\ ' : _W.utl ( \'html.content.client_login_template_4\ ' ) , \'target\ ' : \'login-area\ ' } , \n\t\t\t\t { \'name\ ' : \'difficulties\ ' , \'message\ ' : _W.utl ( \'html.content.client_login_template_5\ ' ) } , \n\t\t\t\t { \'name\ ' : \'maintenance\ ' , \'message\ ' : _W.utl ( `` html.content.client_login_template_11 '' , \ ' < span id= '' maintenanceTime '' > \'+maintenanceTime+\ ' < /span > .\ ' ) } , \n\t\t\t\t { \'name\ ' : \'no-cookies\ ' , \'message\ ' : _W.utl ( \'html.content.client_login_template_7\ ' ) } , \n\t\t\t\t { \'name\ ' : \'account-deleted\ ' , \'message\ ' : _W.utl ( \'html.content.client_login_template_8\ ' ) , \'target\ ' : \'login-area\ ' } \n\t\t\t ] ; \n\n\t\t\tfor ( var i = 0 ; i < errorTypes.size ( ) ; i++ ) \n\t\t\t { \n\t\t\t\tif ( typeof ( getData [ errorTypes [ i ] .name ] ) ! = \'undefined\ ' ) \n\t\t\t\t { \n\t\t\t\t\t $ ( \'login-box-errors\ ' ) .update ( errorTypes [ i ] .message ) .show ( ) ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t\tdocument.observe ( \'dom : loaded\ ' , function ( ) { setTimeout ( showLoginErrors , 100 ) } ) ; \n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tLog in to edit your site\n\t\t\t\t\n\t\t\t\t\n\t\n\t\tEmail\n\t\n\t\t\n\tForgot password ? \n\t\n\t\tPassword\n\t\t\n\t\t\n\t\t\t\n\t\t\tRemember me on this computer\t\t\n\t\t\n\t\t\n\t\t\n\t\tLog in\n\t\n\tSend Reset Email\n\t < < Back\n\n\nfunction showResetPassword ( ) { \n\t $ ( \'password-section\ ' ) .hide ( ) ; \n\t $ ( \'password-reset-button\ ' ) .show ( ) ; \n\t $ ( \'password-reset-container\ ' ) .hide ( ) ; \n\t $ ( \'password-reset-back\ ' ) .show ( ) ; \n\t $ ( \'login-form\ ' ) .observe ( \'submit\ ' , function ( event ) { sendPasswordReset ( ) ; event.stop ( ) ; } ) ; \n } \n\nfunction hidePasswordReset ( ) { \n\t $ ( \'password-section\ ' ) .show ( ) ; \n\t $ ( \'password-reset-button\ ' ) .hide ( ) ; \n\t $ ( \'password-reset-container\ ' ) .show ( ) ; \n\t $ ( \'password-reset-back\ ' ) .hide ( ) ; \n\t $ ( \'login-form\ ' ) .stopObserving ( \'submit\ ' ) ; \n } \n\nfunction sendPasswordReset ( ) { \n\tnew Ajax.Request ( \'/editor/publicBackend.php\ ' , { \n\t\tparameters : { \n\t\t\tpos : \'resetclientpassword\ ' , \n\t\t\tdomain : $ ( \'login-form\ ' ) [ \'client_website\ ' ] ? $ ( \'login-form\ ' ) [ \'client_website\ ' ] .value : null , \n\t\t\tclient_id : $ ( \'login-form\ ' ) [ \'client_id\ ' ] ? $ ( \'login-form\ ' ) [ \'client_id\ ' ] .value : null , \n\t\t\temail : $ ( \'login-form\ ' ) [ \'email\ ' ] .value , \n\t\t\tuser_type : \'developer\ ' , \n\t\t\tcookie : document.cookie\n\t\t } , \n\t\tonSuccess : function ( t ) { \n\t\t\tif ( t.responseText.match ( \ ' % % SUCCESS % % \ ' ) ) { \n\t\t\t\talert ( \'An email has been sent to the address on file with instructions for changing your password\ ' ) ; \n\t\t\t } else { \n\t\t\t\talert ( \'No account with that email was found\ ' ) ; \n\t\t\t } \n\t\t } \n\t } ) ; \n } \n\n\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\tfunction initializeGetData ( ) \n\t\t { \n\t\t\tvar GET_DATA= { } ; \n\t\t\tvar matches = window.location.href.match ( /.*\\ ? ( .* ? ) = ( .* ? ) $ / ) ; \n\t\t\tif ( matches ) { \n\t\t\t\tGET_DATA [ matches [ 1 ] ] = matches [ 2 ] ; \n\t\t\t } \n\t\t\treturn GET_DATA ; \n\t\t } \n\t\tfunction clearPrefilledInput ( input , default_value ) { \n\t\t\tif ( input.value == default_value ) { \n\t\t\t\tinput.value = \'\ ' ; \n\t\t\t\t $ ( input ) .setStyle ( { \'color\ ' : \'\ ' } ) ; \n\t\t\t } \n\t\t } \n\t\tfunction repositionLoginBox ( ) { \n\t\t\tvar totalHeight = document.viewport.getHeight ( ) ; \n\t\tvar boxHeight = $ ( \'login-box\ ' ) .getHeight ( ) ; \n\t\tvar topMargin = Math.max ( ( totalHeight - boxHeight ) /2 , 0 ) ; \n\t\t $ ( \'login-box\ ' ) .setStyle ( { \'marginTop\ ' : topMargin+\'px\ ' } ) ; \n\t } \n\tdocument.observe ( \'dom : loaded\ ' , repositionLoginBox ) ; \n\t\n\t\n\n\n ' 